#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Stationary Time Series
\end_layout

\begin_layout Section
ARMA Simulation
\end_layout

\begin_layout Subsection
Simulation: 
\family typewriter
armaxfilter_simulate
\end_layout

\begin_layout Standard
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ARMA! @
\family typewriter
armaxfilter_simulate
\end_layout

\end_inset

 
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ARMA!Simulation
\end_layout

\end_inset

 ARMA and ARMAX simulation using either normal innovations or user-provided
 residuals.
\end_layout

\begin_layout Subsubsection
ARMA(P,Q) simulation
\end_layout

\begin_layout Standard
An ARMA(P,Q) model is expressed as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y_{t}=\phi_{0}+\sum_{p=1}^{P}\phi_{p}y_{t-p}+\sum_{q=1}^{Q}\theta_{q}\epsilon_{t-q}+\epsilon_{t}.
\]

\end_inset


\end_layout

\begin_layout Standard
ARMA(P,Q) simulation requires the orders for both the AR and MA portions
 to be defined.
 To simulate an irregular AR(P) - an AR(P) with some coefficients 0 - simply
 simulate a regular AR(P) and insert 0 for omitted lags.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
The five examples below refer, in order, to 
\begin_inset Formula 
\begin{align}
y_{t} & =1+.9y_{t-1}+\epsilon_{t}\\
y_{t} & =1+.8\epsilon_{t-1}+\epsilon_{t}\\
y_{t} & =1+1.5y_{t-1}-.9y_{t-2}+.8\epsilon_{t-1}+.4\epsilon_{t-2}+\epsilon_{t}\\
y_{t} & =1+y_{t-1}-.8y_{t-3}+\epsilon_{t}\\
y_{t} & =1+.9y_{t-1}+\eta_{t}
\end{align}

\end_inset

where 
\begin_inset Formula $\epsilon_{t}\simIID N(0,1)$
\end_inset

 are standard normally distributed and 
\begin_inset Formula $\eta_{t}\simIID t_{6}$
\end_inset

 are Student's T with 6 degrees of freedom distributed.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

% Simulates 1000 draws from an AR(1) with phi0 = 1
\end_layout

\begin_layout Plain Layout

T=1000; phi = .9; constant = 1; ARorder = 1;
\end_layout

\begin_layout Plain Layout

y = armaxfilter_simulate(T, constant, ARorder, phi);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% Simulates 1000 draws from an MA(1) with phi0 = 1
\end_layout

\begin_layout Plain Layout

theta = .8; MAorder=1; Arorder=0;
\end_layout

\begin_layout Plain Layout

y = armaxfilter_simulate(T, constant, 0, [], MAorder, theta);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% Simulates 1000 draws from an ARMA(2,2) with phi0 = 1.
\end_layout

\begin_layout Plain Layout

% The parameters are ordered phi = [phi1 phi2] and theta = [theta1 theta2]
\end_layout

\begin_layout Plain Layout

theta=[.8 .4]; phi = [1.5 -.9]; MAorder=2; ARorder=2;
\end_layout

\begin_layout Plain Layout

y = armaxfilter_simulate(T, constant, ARorder, phi , MAorder, theta);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% Simulates and AR(3) with some coefficients 0 and phi0=0;
\end_layout

\begin_layout Plain Layout

constant = 0; phi = [ 1 0 -.8]; ARorder = 3;
\end_layout

\begin_layout Plain Layout

y = armaxfilter_simulate(T, constant, ARorder, phi);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% Simulates 1000 draws from an AR(1) with phi0 = 1 using Students-t innovations
\end_layout

\begin_layout Plain Layout

e = trnd(6,1000,1);
\end_layout

\begin_layout Plain Layout

e=e./sqrt(6/4); % Transforms the errors to have unit variance
\end_layout

\begin_layout Plain Layout

T=1000; phi = .9; constant = 1; ARorder = 1;
\end_layout

\begin_layout Plain Layout

y = armaxfilter_simulate(e,constant, ARorder, phi);
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
ARMAX(P,Q) simulation
\end_layout

\begin_layout Standard
ARMAX simulation extends standard ARMA(P,Q) simulation to include the possibilit
y of exogenous regressors, 
\begin_inset Formula $x_{kt}$
\end_inset

 for 
\begin_inset Formula $k=1,\ldots,K$
\end_inset

.
 An ARMAX(P,Q) model is specified
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y_{t}=\phi_{0}+\sum_{p=1}^{P}\phi_{p}y_{t-p}+\sum_{k=1}^{K}\beta_{k}x_{k,t-1}+\sum_{q=1}^{Q}\theta_{q}\epsilon_{t-q}+\epsilon_{t}
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
Note: While the 
\begin_inset Formula $x_{k,t-1}$
\end_inset

 terms are all written with a 
\begin_inset Formula $t-1$
\end_inset

 index, they can be from any time before 
\begin_inset Formula $t$
\end_inset

 by simply redefining 
\begin_inset Formula $x_{k,t-1}$
\end_inset

 to refer to some variable at 
\begin_inset Formula $t-j$
\end_inset

.
 For example, 
\begin_inset Formula $x_{1,t-1}=SP500_{t-1}$
\end_inset

, 
\begin_inset Formula $x_{2,t-1}=SP500_{t-2}$
\end_inset

 and so on.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
The two examples below refer, in order, to 
\begin_inset Formula 
\begin{align}
y_{t} & =1+.9y_{t-1}+.5x_{t-1}+\epsilon_{t}\\
y_{t} & =1+.9y_{t-1}+.5x_{t-1}-.2x_{t-2}+\epsilon_{t}
\end{align}

\end_inset

where 
\begin_inset Formula $\epsilon_{t}\simIID N(0,1)$
\end_inset

 are standard normally distributed and 
\begin_inset Formula $x_{t}=.8*x_{t-1}+\epsilon_{t}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

% First simulate x
\end_layout

\begin_layout Plain Layout

T=1001; phi = .8; constant = 0; ARorder = 1; % 1001 needed due to
\end_layout

\begin_layout Plain Layout

% losses in lagging
\end_layout

\begin_layout Plain Layout

x = armaxfilter_simulate(T, constant, ARorder, phi);
\end_layout

\begin_layout Plain Layout

% Then lags x
\end_layout

\begin_layout Plain Layout

[x, xlags1] = newlagmatrix(x,1,0);
\end_layout

\begin_layout Plain Layout

T=1000; phi = .9; constant = 1; ARorder = 1; Xp=.5; X=xlags1;
\end_layout

\begin_layout Plain Layout

y = armaxfilter_simulate(T, constant, ARorder, phi, 0, [], X, Xp);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% First simulate x
\end_layout

\begin_layout Plain Layout

T=1002; phi = .8; constant = 0; ARorder = 1; % 1002 needed due to
\end_layout

\begin_layout Plain Layout

% losses in lagging
\end_layout

\begin_layout Plain Layout

x = armaxfilter_simulate(T, constant, ARorder, phi);
\end_layout

\begin_layout Plain Layout

% Then lags x
\end_layout

\begin_layout Plain Layout

[x, xlags12] = newlagmatrix(x,2,0);
\end_layout

\begin_layout Plain Layout

T=1000; phi = .9; constant = 1; ARorder = 1; Xp=[.5 -.2]; X=xlags12;
\end_layout

\begin_layout Plain Layout

y = armaxfilter_simulate(T, constant, ARorder, phi, 0, [], X, Xp);
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Required Inputs
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[outputs] = armaxfilter_simulate(T,CONST)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
T
\family default
: Either a scalar integer or a vector of random numbers.
 If scalar, 
\family typewriter
T
\family default
 represents the length of the time series to simulate.
 If a 
\begin_inset Formula $T$
\end_inset

 by 1 vector of random numbers, these will be used to construct the simulated
 time series.
 
\end_layout

\begin_layout Itemize

\family typewriter
CONST
\family default
: Scalar value containing the constant term in the simulated model 
\end_layout

\begin_layout Subsubsection
Optional Inputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[outputs] = armaxfilter_simulate(T,CONST,AR,ARPARAMS,MA,MAPARAMS,X,XPARAMS)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
AR
\family default
: Order of AR in simulated model 
\end_layout

\begin_layout Itemize

\family typewriter
ARPARAMS
\family default
: Column vector containing 
\family typewriter
AR
\family default
 elements containing the values of the parameters on the AR terms.
 Ordered from smallest to largest.
 
\end_layout

\begin_layout Itemize

\family typewriter
MA
\family default
: Order of MA in simulated model 
\end_layout

\begin_layout Itemize

\family typewriter
MAPARAMS
\family default
: Column vector containing 
\family typewriter
MA
\family default
 elements containing the values of the parameters on the MA terms.
 Ordered from smallest to largest.
 
\end_layout

\begin_layout Itemize

\family typewriter
X
\family default
: 
\begin_inset Formula $T$
\end_inset

 by 
\begin_inset Formula $k$
\end_inset

 matrix of exogenous variables 
\end_layout

\begin_layout Itemize

\family typewriter
XPARAMS
\family default
: 
\begin_inset Formula $k$
\end_inset

 by 1 vector of parameters for the exogenous variables.
 
\end_layout

\begin_layout Subsubsection
Outputs
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[Y,ERRORS] = armaxfilter_simulate(inputs)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
Y
\family default
: 
\begin_inset Formula $T$
\end_inset

 by 1 vector of simulated data 
\end_layout

\begin_layout Itemize

\family typewriter
ERRORS
\family default
: 
\begin_inset Formula $T$
\end_inset

 by 1 vector of errors used to construct the simulated data 
\end_layout

\begin_layout Subsubsection
Comments
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

ARMAX(P,Q) simulation with normal errors.
  Also simulates AR, MA and ARMA models.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

USAGE:
\end_layout

\begin_layout Plain Layout

  AR:
\end_layout

\begin_layout Plain Layout

  [Y,ERRORS]=armaxfilter_simulate(T,CONST,AR,ARPARAMS)
\end_layout

\begin_layout Plain Layout

  MA:
\end_layout

\begin_layout Plain Layout

  [Y,ERRORS]=armaxfilter_simulate(T,CONST,0,[],MA,MAPARAMS)
\end_layout

\begin_layout Plain Layout

  ARMA:
\end_layout

\begin_layout Plain Layout

  [Y,ERRORS]=armaxfilter_simulate(T,CONST,AR,ARPARAMS,MA,MAPARAMS);
\end_layout

\begin_layout Plain Layout

  ARMAX:
\end_layout

\begin_layout Plain Layout

  [Y,ERRORS]=armaxfilter_simulate(T,CONST,AR,ARPARAMS,MA,MAPARAMS,X,XPARAMS);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

INPUTS:
\end_layout

\begin_layout Plain Layout

  T        - Length of data series to be simulated  OR
\end_layout

\begin_layout Plain Layout

               T by 1 vector of user supplied random numbers (e.g.
 rand(1000,1)-0.5)
\end_layout

\begin_layout Plain Layout

  CONST    - Value of the constant in the model.
  To omit, set to 0.
\end_layout

\begin_layout Plain Layout

  AR       - Order of AR in model.
  To include only selected lags, for example t-1 and t-3, use 3
\end_layout

\begin_layout Plain Layout

               and set the coefficient on 2 to 0
\end_layout

\begin_layout Plain Layout

  ARPARAMS - AR by 1 vector of parameters for the AR portion of the model
\end_layout

\begin_layout Plain Layout

  MA       - Order of MA in model.
  To include only selected lags of the error, for example t-1
\end_layout

\begin_layout Plain Layout

               and t-3, use 3 and set the coefficient on 2 to 0
\end_layout

\begin_layout Plain Layout

  MAPARAMS - MA by 1 vector of parameters for the MA portion of the model
\end_layout

\begin_layout Plain Layout

  X        - T by K matrix of exogenous variables
\end_layout

\begin_layout Plain Layout

  XPARAMS  - K by 1 vector of parameters on the exogenous variables
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

OUTPUTS:
\end_layout

\begin_layout Plain Layout

  Y        - A T by 1 vector of simulated data
\end_layout

\begin_layout Plain Layout

  ERRORS   - The errors used in the simulation
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

COMMENTS:
\end_layout

\begin_layout Plain Layout

   The ARMAX(P,Q) model simulated is:
\end_layout

\begin_layout Plain Layout

      y(t) = const + arp(1)*y(t-1) + arp(2)*y(t-2) + ...
 + arp(P) y(t-P) +
\end_layout

\begin_layout Plain Layout

                   + ma(1)*e(t-1)  + ma(2)*e(t-2)  + ...
 + ma(Q) e(t-Q)
\end_layout

\begin_layout Plain Layout

                   + xp(1)*x(t,1)  + xp(2)*x(t,2)  + ...
 + xp(K)x(t,K)
\end_layout

\begin_layout Plain Layout

                   + e(t)
\end_layout

\begin_layout Plain Layout

EXAMPLES:
\end_layout

\begin_layout Plain Layout

  Simulate an AR(1) with a constant
\end_layout

\begin_layout Plain Layout

      y = armaxfilter_simulate(500, .5, 1, .9)
\end_layout

\begin_layout Plain Layout

  Simulate an AR(1) without a constant
\end_layout

\begin_layout Plain Layout

      y = armaxfilter_simulate(500, 0, 1, .9)
\end_layout

\begin_layout Plain Layout

  Simulate an ARMA(1,1) with a constant
\end_layout

\begin_layout Plain Layout

      y = armaxfilter_simulate(500, .5, 1, .95, 1, -.5)
\end_layout

\begin_layout Plain Layout

  Simulate a  MA(1) with a constant
\end_layout

\begin_layout Plain Layout

      y = armaxfilter_simulate(500, .5, [], [], 1, -.5)
\end_layout

\begin_layout Plain Layout

  Simulate a seasonal MA(4) with a constant
\end_layout

\begin_layout Plain Layout

      y = armaxfilter_simulate(500, .5, [], [], 4, [.6 0 0 .2])
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

See also ARMAXFILTER, HETEROGENEOUSAR
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
ARMA Estimation
\end_layout

\begin_layout Standard
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ARMA
\end_layout

\end_inset

 
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Autoregressive Moving Average|see
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

ARMA
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection
Estimation: 
\family typewriter
armaxfilter
\end_layout

\begin_layout Standard
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ARMA! @
\family typewriter
armaxfilter
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ARMA!Estimation
\end_layout

\end_inset

 Provides ARMA and ARMAX estimation for time-series models.
\end_layout

\begin_layout Subsubsection
AR(1) and AR(P)
\end_layout

\begin_layout Standard
As special cases of an ARMAX, AR(1) and AR(P), both regular and irregular,
 can be estimated using 
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb!armaxfilter!
\end_layout

\end_inset

.
 The AR(1),
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y_{t}=\phi_{0}+\phi_{1}y_{t-1}+\epsilon_{t}
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
can be estimated using 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

parameters = armaxfilter(y,1,1)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
where the first argument is the time series, the second argument takes the
 value 1 or 0 to indicate whether a constant should be included in the model
 (i.e.
 if it were 0, the model 
\begin_inset Formula $y_{t}=\phi_{1}y_{t-1}+\epsilon_{t}$
\end_inset

 would be estimated), and the third argument contains the autoregressive
 lags to be included in the model.
 An AR(P),
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y_{t}=\phi_{0}+\phi_{1}y_{t-1}+\ldots+\phi_{P}y_{t-P}+\epsilon_{t}
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
can be similarly estimated
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

P = 3;
\end_layout

\begin_layout Plain Layout

parameters = armaxfilter(y,1,[1:P])
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
which would estimate an AR(3).
 The final argument in 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb!armaxfilter!
\end_layout

\end_inset

 is 
\family typewriter
[1:3]
\family default
 because all three lags of 
\begin_inset Formula $y$
\end_inset

, 
\begin_inset Formula $y_{t-1}$
\end_inset

, 
\begin_inset Formula $y_{t-2}$
\end_inset

 and 
\begin_inset Formula $y_{t-3}$
\end_inset

 should be included (Note that 
\family typewriter
[1:3] = [1 2 3]
\family default
).
 An irregular AR(3) that includes only the first and third lag, 
\begin_inset Formula $y_{t}=\phi_{0}+\phi_{1}y_{t-1}+\phi_{3}y_{t-3}+\epsilon_{t}$
\end_inset

 can be fit using
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

parameters = armaxfilter(y,1,[1 3])
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
where the final argument changes from 
\family typewriter
[1:3]
\family default
 to 
\family typewriter
[1 3]
\family default
 to indicate that only lags 1 and 3 should be included.
 
\end_layout

\begin_layout Subsubsection
MA(1) and MA(P)
\end_layout

\begin_layout Standard
Estimation of MA(1) and MA(Q) models is similar to estimation of AR(P) models.
 The commands to the MA coefficient in 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
verb!armaxfilter!
\end_layout

\end_inset

 are identical and the AR coefficients are set to 0 (or empty, 
\family typewriter
[]
\family default
).
 Estimation of an MA(1), 
\begin_inset Formula 
\[
y_{t}=\theta_{1}\epsilon_{t-1}+\epsilon_{t}
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
can be accomplished by calling 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

parameters = armaxfilter(y,1,[],1)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
where the empty argument (
\family typewriter
[]
\family default
) indicates that no AR terms are to be included.
 Parameter estimates for an MA(Q),
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y_{t}=\phi_{0}+\theta_{1}\epsilon_{t-1}+\ldots+\theta_{Q}\epsilon_{t-Q}+\epsilon_{t}
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
can be computed by calling
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Q=3;
\end_layout

\begin_layout Plain Layout

parameters = armaxfilter(y,1,[],[1:Q])
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
and an irregular MA(3) that only includes lags 1 and 3 can be estimated
 by replacing the final argument, 
\family typewriter
[1:3]
\family default
, with 
\family typewriter
[1 3]
\family default
.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

parameters = armaxfilter(y,1,[],[1 3])
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
ARMA(P,Q)
\end_layout

\begin_layout Standard
Regular and Irregular ARMA(P,Q) estimation simply combines the two above
 steps.
 For example, to estimate a regular ARMA(1,1),
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y_{t}=\phi_{0}+\phi_{1}y_{t-1}+\theta_{1}\epsilon_{t-1}+\epsilon_{t}
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
call
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

parameters = armaxfilter(y,1,1,1)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
Estimation of regular ARMA(P,Q) is straightforward.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y_{t}=\phi_{0}+\phi_{1}y_{t-1}+\ldots+\phi_{P}y_{t-P}+\theta_{1}\epsilon_{t-1}+\ldots+\theta_{Q}\epsilon_{t-Q}+\epsilon_{t}
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
is estimated using the command
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

P=3; Q=4;
\end_layout

\begin_layout Plain Layout

parameters = armaxfilter(y,1,1:P,1:Q)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
and irregular ARMA(P,Q) processes can be computed by replacing the regular
 arrays 
\family typewriter
[1:P]
\family default
 and 
\family typewriter
[1:Q]
\family default
 with arrays of only the lags to be included,
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

parameters = armaxfilter(y,1,[1 3],[1 4])
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
ARX(P), MAX(Q) and ARMAX(P,Q)
\end_layout

\begin_layout Standard
Including exogenous variables in AR(P), MA(Q) and ARMA(P,Q) models is identical
 to the above save one additional step needed to align the data.
 Suppose that two time series 
\begin_inset Formula $\{y_{t}\}$
\end_inset

 and 
\begin_inset Formula $\{x_{t}\}$
\end_inset

 are available and that they are aligned, so that 
\begin_inset Formula $x_{1}$
\end_inset

 and 
\begin_inset Formula $y_{1}$
\end_inset

 are from the same point in time.
 To regress 
\begin_inset Formula $y_{t}$
\end_inset

 on one lag of itself and a lag of 
\begin_inset Formula $x_{t}$
\end_inset

, it is necessary to promote 
\begin_inset Formula $x$
\end_inset

 so that the element in the s
\begin_inset Formula $^{\mathrm{th}}$
\end_inset

 position is actually 
\begin_inset Formula $x_{s-1}$
\end_inset

 and thus that 
\begin_inset Formula $y_{t}$
\end_inset

 will be coupled with 
\begin_inset Formula $x_{t-1}$
\end_inset

.
 This is simple to do using the command 
\family typewriter
newlagmatrix
\family default
.
 
\family typewriter
newlagmatrix
\family default
 produces two outputs, a vector of contemporary values that has been adjusted
 to remove lags (i.e.
 if the original series has 
\begin_inset Formula $T$
\end_inset

 observations, and 
\family typewriter
newlagmatrix
\family default
 is requested to produce 2 lags, the new series will have 
\begin_inset Formula $T-2$
\end_inset

.) and a matrix of lags of the form 
\begin_inset Formula $y_{t-1}\,y_{t-2}\,\ldots y_{t-P}$
\end_inset

.
 To estimate an ARX(P), it is necessary to adjust both 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

 so that they line up.
 For example, to estimate
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y_{t}=\phi_{0}+\phi_{1}y_{t-1}+\beta_{1}x_{t-1}+\epsilon_{t},
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
call
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[yadj, ylags] = newlagmatrix(y,1,0);
\end_layout

\begin_layout Plain Layout

[xadj, xlags] = newlagmatrix(x,1,0);
\end_layout

\begin_layout Plain Layout

% Regress the adjusted values of y on the lags of x
\end_layout

\begin_layout Plain Layout

X = xlags;
\end_layout

\begin_layout Plain Layout

parameters = armaxfilter(yadj,1,1,0,X);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
Aside from the step needed to properly align the data, estimating ARX(P),
 MAX(Q) and ARMAX(P,Q) models is identical to AR(P), MA(Q) and ARMA(P,Q).
 Regular models can be estimated by including 
\family typewriter
1:P
\family default
 or 
\family typewriter
1:Q
\family default
 and irregular models can be estimated using irregular arrays (e.g.
 
\family typewriter
[1 3]
\family default
 or 
\family typewriter
[1 2 4]
\family default
).
\end_layout

\begin_layout Standard
The key to estimating ARMAX(P,Q) models is to lags both 
\begin_inset Formula $y$
\end_inset

 and 
\begin_inset Formula $x$
\end_inset

 by as many lags of 
\begin_inset Formula $x$
\end_inset

 as are included in the model.
 Consider the final example of an ARMAX(1,1) where 3 lags of 
\begin_inset Formula $x$
\end_inset

 are to be included,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y_{t}=\phi_{0}+\phi_{1}y_{t-1}+\beta_{1}x_{t-1}+\beta_{2}x_{t-2}+\beta_{3}x_{t-3}+\theta_{1}\epsilon_{t-1}+\epsilon_{t}.
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
Assuming that the original 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

 data 
\begin_inset Quotes eld
\end_inset

line-up
\begin_inset Quotes erd
\end_inset

 - so that 
\family typewriter
x(1)
\family default
 and 
\family typewriter
y(1)
\family default
 occurred at the same point in time - this model can be estimated using
 the following code:
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[yadj, ylags] = newlagmatrix(y,3,0);
\end_layout

\begin_layout Plain Layout

[xadj, xlags] = newlagmatrix(x,3,0);
\end_layout

\begin_layout Plain Layout

% Regress the adjusted values of y on the lags of x
\end_layout

\begin_layout Plain Layout

X = xlags;
\end_layout

\begin_layout Plain Layout

parameters = armaxfilter(yadj,1,1,1,X);
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Required Inputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[outputs] = armaxfilter(Y,CONSTANT)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The required inputs are: 
\end_layout

\begin_layout Itemize

\family typewriter
Y
\family default
: 
\begin_inset Formula $T$
\end_inset

 by 1 vector containing the dependant variable.
 
\end_layout

\begin_layout Itemize

\family typewriter
CONSTANT
\family default
: Logical value indicating whether to include a constant (1 to include,
 0 to exclude).
 
\end_layout

\begin_layout Standard
\noindent

\emph on
Note
\emph default
: The required inputs only estimate the (unconditional) mean, and so it
 will generally be necessary to use some of the optional inputs.
\end_layout

\begin_layout Subsubsection
Optional Inputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[outputs] = armaxfilter(Y,CONSTANT,P,Q,X,STARTINGVALS,OPTIONS,HOLDBACK)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The optional inputs are: 
\end_layout

\begin_layout Itemize

\family typewriter
P
\family default
: Column vector containing indices for the AR component in the model.
 
\end_layout

\begin_layout Itemize

\family typewriter
Q
\family default
: Column vector containing indices for the MA component in the model 
\end_layout

\begin_layout Itemize

\family typewriter
X
\family default
: 
\begin_inset Formula $T$
\end_inset

 by 
\begin_inset Formula $k$
\end_inset

 matrix of exogenous regressors.
 Should be aligned with 
\family typewriter
Y
\family default
 so that the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ith
\end_layout

\end_inset

 row of 
\family typewriter
X
\family default
 is known when the observation in the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ith
\end_layout

\end_inset

 row of 
\family typewriter
Y
\family default
 is observed.
 
\end_layout

\begin_layout Itemize

\family typewriter
STARTINGVALS
\family default
: Column vector containing starting values for estimation.
 Used only for models with an MA component.
 
\end_layout

\begin_layout Itemize

\family typewriter
OPTIONS
\family default
: MATLAB options structure for optimization using 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

lsqnonlin
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Itemize

\family typewriter
HOLDBACK
\family default
: Scalar integer indicating the number of observations to withhold at the
 start of the sample.
 Useful when testing models with different lag lengths to produce comparable
 likelihoods, AICs and SBICs.
 Should be set to the highest lag length (AR or MA) in the models studied.
 
\end_layout

\begin_layout Subsubsection
Outputs
\end_layout

\begin_layout Standard

\family typewriter
armaxfilter
\family default
 provides many other outputs than the estimated parameters.
 The full 
\family typewriter
armaxfilter
\family default
 command can return
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[PARAMETERS, LL, ERRORS, SEREGRESSION, DIAGNOSTICS, VCVROBUST, VCV, LIKELIHOODS,
 SCORES]
\end_layout

\begin_layout Plain Layout

                                                               =armaxfilter(inpu
ts here)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The outputs are: 
\end_layout

\begin_layout Itemize

\family typewriter
PARAMETERS
\family default
: A vector of estimated parameters.
 The size of parameters is determined by whether the constant is included,
 the number of lags included in the AR and MA portions and the number of
 exogenous variables included (if any).
 
\end_layout

\begin_layout Itemize

\family typewriter
LL
\family default
: The log-likelihood computed using the estimated residuals and assuming
 a normal distribution.
 
\end_layout

\begin_layout Itemize

\family typewriter
ERRORS
\family default
: A 
\begin_inset Formula $T$
\end_inset

 by 1 vector of estimated errors from the model 
\end_layout

\begin_layout Itemize

\family typewriter
SEREGRESSION
\family default
: Standard error of the regression.
 Estimated using a degree-of-freedom adjustment.
 
\end_layout

\begin_layout Itemize

\family typewriter
DIAGNOSTICS
\family default
: A MATLAB structure of output that may be useful.
 To access elements of a structure, enter 
\family typewriter
diagnostics.
\family default
\shape italic
fieldname
\shape default
 where 
\shape italic
fieldname
\shape default
 is one of: 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
P
\family default
: The AR lags used in estimation 
\end_layout

\begin_layout Itemize

\family typewriter
Q
\family default
: The MA lags used in estimation 
\end_layout

\begin_layout Itemize

\family typewriter
C
\family default
: An indicator (1 or 0) indicating whether a constant was included.
 
\end_layout

\begin_layout Itemize

\family typewriter
NX
\family default
: The number of X variables in the regression 
\end_layout

\begin_layout Itemize

\family typewriter
AIC
\family default
: The Akaike Information Criteria (AIC) for the estimated model 
\end_layout

\begin_layout Itemize

\family typewriter
SBIC
\family default
: The Schwartz/Bayesian Information Criteria (SBIC) for the estimated model
 
\end_layout

\begin_layout Itemize

\family typewriter
T
\family default
: The number of observations in the original data series 
\end_layout

\begin_layout Itemize

\family typewriter
ADJT
\family default
: The number of observations used for estimation after adjusting for 
\family typewriter
HOLDBACK
\family default
 or requires AR lag adjustments.
 
\end_layout

\begin_layout Itemize

\family typewriter
ARROOTS
\family default
: The characteristic roots of the characteristic equation corresponding
 to the estimated ARMA model.
 
\end_layout

\begin_layout Itemize

\family typewriter
ABSARROOTS
\family default
: The absolute value of the arroots 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
VCVROBUST
\family default
: Heteroskedasticity-robust covariance matrix for the estimated parameters.
 The square-root of the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ith
\end_layout

\end_inset

 diagonal element is the standard deviation of the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ith
\end_layout

\end_inset

 element of 
\family typewriter
PARAMETERS
\family default
.
 
\end_layout

\begin_layout Itemize

\family typewriter
VCV
\family default
: Non-heteroskedasticity robust covariance matrix of the estimated parameters.
 
\end_layout

\begin_layout Itemize

\family typewriter
LIKELIHOODS
\family default
: A 
\begin_inset Formula $T$
\end_inset

 by 1 vector of the log-likelihood of each observation.
 
\end_layout

\begin_layout Itemize

\family typewriter
SCORES
\family default
: A 
\begin_inset Formula $T$
\end_inset

 by # parameters matrix of scores of the model.
 These are used in some advanced test.
 
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
See above.
\end_layout

\begin_layout Subsubsection
Comments
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

ARMAX(P,Q) estimation
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

USAGE:
\end_layout

\begin_layout Plain Layout

  [PARAMETERS]=armaxfilter(Y,CONSTANT,P,Q)
\end_layout

\begin_layout Plain Layout

  [PARAMETERS, LL, ERRORS, SEREGRESSION, DIAGNOSTICS, VCVROBUST, VCV, LIKELIHOOD
S, SCORES]
\end_layout

\begin_layout Plain Layout

              =armaxfilter(Y,CONSTANT,P,Q,X,STARTINGVALS,OPTIONS,HOLDBACK)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

INPUTS:
\end_layout

\begin_layout Plain Layout

  Y            - A column of data
\end_layout

\begin_layout Plain Layout

  CONSTANT     - Scalar variable: 1 to include a constant, 0 to exclude
\end_layout

\begin_layout Plain Layout

  P            - Non-negative integer vector representing the AR orders
 to include in the model.
\end_layout

\begin_layout Plain Layout

  Q            - Non-negative integer vector representing the MA orders
 to include in the model.
\end_layout

\begin_layout Plain Layout

  X            - [OPTIONAL]  a T by K  matrix of exogenous variables.
 These line up exactly with
\end_layout

\begin_layout Plain Layout

                   the Y's and if they are time series, you need to shift
 them down by 1 place,
\end_layout

\begin_layout Plain Layout

                   i.e.
 pad the bottom with 1 observation and cut off the top row [ T by K].
  For
\end_layout

\begin_layout Plain Layout

                   example, if you want to include X(t-1) as a regressor,
 Y(t) should line up
\end_layout

\begin_layout Plain Layout

                   with X(t-1)
\end_layout

\begin_layout Plain Layout

  STARTINGVALS - [OPTIONAL] A (CONSTANT+length(P)+length(Q)+K) vector of
 starting values.
\end_layout

\begin_layout Plain Layout

                  [constant ar(1) ...
 ar(P) xp(1) ...
 xp(K) ma(1) ...
 ma(Q) ]'
\end_layout

\begin_layout Plain Layout

  OPTIONS      - [OPTIONAL] A user provided options structure.
 Default options are below.
\end_layout

\begin_layout Plain Layout

  HOLDBACK     - [OPTIONAL] Scalar integer indicating the number of observations
 to withhold at
\end_layout

\begin_layout Plain Layout

                   the start of the sample.
 Useful when testing models with different lag lengths
\end_layout

\begin_layout Plain Layout

                   to produce comparable likelihoods, AICs and SBICs.
 Should be set to the highest
\end_layout

\begin_layout Plain Layout

                   lag length (AR or MA) in the models studied.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

OUTPUTS:
\end_layout

\begin_layout Plain Layout

  PARAMETERS   - A 1+length(p)+size(X,2)+length(q) column vector of parameters
 with
\end_layout

\begin_layout Plain Layout

                 [constant ar(1) ...
 ar(P) xp(1) ...
 xp(K) ma(1) ...
 ma(Q) ]'
\end_layout

\begin_layout Plain Layout

  LL           - The log-likelihood of the regression
\end_layout

\begin_layout Plain Layout

  ERRORS       - A T by 1 length vector of errors from the regression
\end_layout

\begin_layout Plain Layout

  SEREGRESSION - The standard error of the regressions
\end_layout

\begin_layout Plain Layout

  DIAGNOSTICS  - A structure of diagnostic information containing:
\end_layout

\begin_layout Plain Layout

                    P          - The AR lags used in estimation
\end_layout

\begin_layout Plain Layout

                    Q          - The MA lags used in estimation
\end_layout

\begin_layout Plain Layout

                    C          - Indicator if constant was included
\end_layout

\begin_layout Plain Layout

                    nX         - Number of X variables in the regression
\end_layout

\begin_layout Plain Layout

                    AIC        - Akaike Information Criteria for the estimated
 model
\end_layout

\begin_layout Plain Layout

                    SBIC       - Bayesian (Schwartz) Information Criteria
 for the
\end_layout

\begin_layout Plain Layout

                                  estimated model
\end_layout

\begin_layout Plain Layout

                    ADJT       - Length of sample used for estimation after
 HOLDBACK adjustments
\end_layout

\begin_layout Plain Layout

                    T          - Number of observations
\end_layout

\begin_layout Plain Layout

                    ARROOTS    - The characteristic roots of the ARMA
\end_layout

\begin_layout Plain Layout

                                  process evaluated at the estimated parameters
\end_layout

\begin_layout Plain Layout

                    ABSARROOTS - The absolute value (complex modulus if
\end_layout

\begin_layout Plain Layout

                                   complex) of the ARROOTS
\end_layout

\begin_layout Plain Layout

  VCVROBUST    - Robust parameter covariance matrix%
\end_layout

\begin_layout Plain Layout

  VCV          - Non-robust standard errors (inverse Hessian)
\end_layout

\begin_layout Plain Layout

  LIKELIHOODS  - A T by 1 vector of log-likelihoods
\end_layout

\begin_layout Plain Layout

  SCORES       - Matrix of scores (# of params by T)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

COMMENTS:
\end_layout

\begin_layout Plain Layout

  The ARMAX(P,Q) model is:
\end_layout

\begin_layout Plain Layout

     y(t) = const + arp(1)*y(t-1) + arp(2)*y(t-2) + ...
 + arp(P) y(t-P) +
\end_layout

\begin_layout Plain Layout

                   + ma(1)*e(t-1)  + ma(2)*e(t-2)  + ...
 + ma(Q) e(t-Q)
\end_layout

\begin_layout Plain Layout

                   + xp(1)*x(t,1)  + xp(2)*x(t,2)  + ...
 + xp(K)x(t,K)
\end_layout

\begin_layout Plain Layout

                   + e(t)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  The main optimization is performed with lsqnonlin with the default options:
\end_layout

\begin_layout Plain Layout

    options =  optimset('lsqnonlin');
\end_layout

\begin_layout Plain Layout

    options.MaxIter = 10*(maxp+maxq+constant+K);
\end_layout

\begin_layout Plain Layout

    options.Display='iter';
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  You should use the MEX file (or compile if not using Win64 Matlab) for
 armaxerrors.c as it
\end_layout

\begin_layout Plain Layout

  provides speed ups of approx 10 times relative to the m file version armaxerro
rs.m
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

EXAMPLE:
\end_layout

\begin_layout Plain Layout

  To fit a standard ARMA(1,1), use
\end_layout

\begin_layout Plain Layout

      parameters = armaxfilter(y,1,1,1)
\end_layout

\begin_layout Plain Layout

  To fit a standard ARMA(3,4), use
\end_layout

\begin_layout Plain Layout

      parameters = armaxfilter(y,1,[1:3],[1:4])
\end_layout

\begin_layout Plain Layout

  To fit an ARMA that includes lags 1 and 3 of y and 1 and 4 of the MA term,
 use
\end_layout

\begin_layout Plain Layout

      parameters = armaxfilter(y,1,[1 3],[1 4])
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

See also ARMAXFILTER_SIMULATE, HETEROGENEOUSAR, ARMAXERRORS
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Heterogeneous Autoregression: 
\family typewriter
heterogeneousar
\end_layout

\begin_layout Standard
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ARMA! @
\family typewriter
heterogeneousar
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ARMA!Heterogeneous
\end_layout

\end_inset

 Estimates heterogeneous autoregressions, which are restricted parameterizations
 of standard ARs.
 A HAR is a model of the class
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y_{t}=\phi_{0}+\sum_{i=1}^{P}\phi_{i}\bar{y}_{t-1:i}+\epsilon_{t}
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
where 
\begin_inset Formula $\bar{y}_{t-1:i}=i^{-1}\sum_{j=1}^{i}y_{t-j}$
\end_inset

.
 If all lags are included from 1 to P then the HAR is just a re-parameterized
 Pþorder AR, and so it is generally the case that most lags are set to zero,
 as in the common volatility HAR,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y_{t}=\phi_{0}+\phi_{1}y_{t-1}+\phi_{5}\bar{y}_{t-1:5}+\phi_{22}\bar{y}_{t-1:22}+\epsilon_{t}
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
where 
\begin_inset Formula $\bar{y}_{t-1:1}=y_{t-1}$
\end_inset

.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

% Simulate data from a HAR model
\end_layout

\begin_layout Plain Layout

y = armaxfilter_simulate(1000,1,22,[.1 .3/4*ones(1,4) .55/17*ones(1,17)])
\end_layout

\begin_layout Plain Layout

% Standard HAR with 1, 5 and 22 day lags
\end_layout

\begin_layout Plain Layout

parameters = heterogeneousar(Y,1,[1 5 22]')
\end_layout

\begin_layout Plain Layout

% Standard HAR with 1, 5 and 22 days lags using matrix notation
\end_layout

\begin_layout Plain Layout

parameters = heterogeneousar(Y,1,[1 1;1 5;1 22])
\end_layout

\begin_layout Plain Layout

% Standard HAR with 1, 5 and 22 day lags using the non-overlapping reparameteriz
ation
\end_layout

\begin_layout Plain Layout

parameters = heterogeneousar(Y,1,[1 5 22]',[],'MODIFIED')
\end_layout

\begin_layout Plain Layout

% Standard HAR with 1, 5 and 22 day lags with Newey-West standard errors
\end_layout

\begin_layout Plain Layout

[parameters, errors, seregression, diagnostics, vcvrobust, vcv] = ...
\end_layout

\begin_layout Plain Layout

heterogeneousar(Y,1,[1 5 22]',ceil(length(Y)^(1/3)))
\end_layout

\begin_layout Plain Layout

% Nonstandard HAR with lags 1, 2  and 10-22 day lags
\end_layout

\begin_layout Plain Layout

parameters = heterogeneousar(Y,1,[1 1;2 2;10 22])
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Required Inputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[outputs] = heterogeneousar(Y,CONSTANT,P)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The required inputs are: 
\end_layout

\begin_layout Itemize

\family typewriter
Y
\family default
: 
\begin_inset Formula $T$
\end_inset

 by 1 vector containing the dependant variable.
 
\end_layout

\begin_layout Itemize

\family typewriter
CONSTANT
\family default
: Logical value indicating whether to include a constant (1 to include,
 0 to exclude).
 
\end_layout

\begin_layout Itemize

\family typewriter
P
\family default
: Vector or Matrix.
 If a vector, must be a column vector.
 The values are interpreted as the number of lags to average in each term.
 For example, 
\family typewriter
[1 5 22]
\family default
 would fit the HAR 
\begin_inset Formula 
\[
y_{t}=\phi_{0}+\phi_{1}y_{t-1}+\phi_{5}\bar{y}_{t-1:5}+\phi_{22}\bar{y}_{t-1:22}+\epsilon_{t}.
\]

\end_inset

If a matrix, must be number of terms by 2 where the first column indicates
 the start point and the second indicates the end point.
 The matrix equivalent to the above vector notation is 
\begin_inset Formula 
\[
\left[\begin{array}{cc}
1 & 1\\
1 & 5\\
1 & 22
\end{array}\right].
\]

\end_inset

The matrix notation allows a HAR with non-overlapping intervals to be specified,
 such as 
\begin_inset Formula 
\[
\left[\begin{array}{cc}
1 & 1\\
2 & 5\\
10 & 22
\end{array}\right]
\]

\end_inset

which would fit the model 
\begin_inset Formula 
\[
y_{t}=\phi_{0}+\phi_{1}y_{t-1}+\phi_{5}\bar{y}_{t-2:5}+\phi_{22}\bar{y}_{t-10:22}+\epsilon_{t}.
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Optional Inputs
\end_layout

\begin_layout Standard
[outputs] = heterogeneousar(Y,CONSTANT,P,NW,SPEC)
\end_layout

\begin_layout Standard
The optional inputs are: 
\end_layout

\begin_layout Itemize

\family typewriter
NW
\family default
: Number of lags to include when computing the covariance of the estimated
 parameters.
 Default is 0.
 
\end_layout

\begin_layout Itemize

\family typewriter
SPEC
\family default
: String value, either 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

'STANDARD'
\end_layout

\end_inset

 or 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

'MODIFIED'
\end_layout

\end_inset

.
 Modified reparameterizes the usual HAR as a series of non-overlapping intervals
, and so 
\begin_inset Formula 
\[
y_{t}=\phi_{0}+\phi_{1}y_{t-1}+\phi_{5}\bar{y}_{t-1:5}+\phi_{22}\bar{y}_{t-1:22}+\epsilon_{t}
\]

\end_inset

would be reparameterized as 
\begin_inset Formula 
\[
y_{t}=\phi_{0}+\phi_{1}y_{t-1}+\phi_{5}\bar{y}_{t-2:5}+\phi_{22}\bar{y}_{t-6:22}+\epsilon_{t}
\]

\end_inset

when estimated.
 The model fits are identical, and the 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

'MODIFIED'
\end_layout

\end_inset

 version is only helpful for presentation and interpretation.
 
\end_layout

\begin_layout Subsubsection
Outputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[PARAMETERS, ERRORS, SEREGRESSION, DIAGNOSTICS, VCVROBUST, VCV] = heterogeneousa
r(inputs)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
PARAMETERS
\family default
: A vector of estimated parameters.
 The size of parameters is determined by whether the constant is included
 and the number of lags included in the HAR.
 
\end_layout

\begin_layout Itemize

\family typewriter
ERRORS
\family default
: A 
\begin_inset Formula $T$
\end_inset

 by 1 vector of estimated errors from the model.
 The first 
\family typewriter
max(max(P))
\family default
 are set to 0.
 
\end_layout

\begin_layout Itemize

\family typewriter
SEREGRESSION
\family default
: Standard error of the regression.
 Estimated using a degree-of-freedom adjustment.
 
\end_layout

\begin_layout Itemize

\family typewriter
DIAGNOSTICS
\family default
: A MATLAB structure of output that may be useful.
 To access elements of a structure, enter 
\family typewriter
diagnostics.
\family default
\shape italic
fieldname
\shape default
 where 
\shape italic
fieldname
\shape default
 is one of: 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
P
\family default
: The AR lags used in estimation 
\end_layout

\begin_layout Itemize

\family typewriter
C
\family default
: An indicator (1 or 0) indicating whether a constant was included.
 
\end_layout

\begin_layout Itemize

\family typewriter
AIC
\family default
: The Akaike Information Criteria (AIC) for the estimated model 
\end_layout

\begin_layout Itemize

\family typewriter
SBIC
\family default
: The Schwartz/Bayesian Information Criteria (SBIC) for the estimated model
 
\end_layout

\begin_layout Itemize

\family typewriter
T
\family default
: The number of observations in the original data series 
\end_layout

\begin_layout Itemize

\family typewriter
ADJT
\family default
: The number of observations used for estimation after adjusting for AR
 lag length.
 
\end_layout

\begin_layout Itemize

\family typewriter
ARROOTS
\family default
: The characteristic roots of the characteristic equation corresponding
 to the estimated ARMA model.
 
\end_layout

\begin_layout Itemize

\family typewriter
ABSARROOTS
\family default
: The absolute value of the arroots 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
VCVROBUST
\family default
: Heteroskedasticity-robust covariance matrix for the estimated parameters.
 Also autocorrelation robust if 
\family typewriter
NW
\family default
 selected appropriately.
 The square-root of the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ith
\end_layout

\end_inset

 diagonal element is the standard deviation of the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
ith
\end_layout

\end_inset

 element of 
\family typewriter
PARAMETERS
\family default
.
 
\end_layout

\begin_layout Itemize

\family typewriter
VCV
\family default
: Non-heteroskedasticity robust covariance matrix of the estimated parameters.
 
\end_layout

\begin_layout Subsubsection
Comments
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Heterogeneous Autoregression parameter estimation
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

USAGE:
\end_layout

\begin_layout Plain Layout

 [PARAMETERS] = heterogeneousar(Y,CONSTANT,P)
\end_layout

\begin_layout Plain Layout

 [PARAMETERS, ERRORS, SEREGRESSION, DIAGNOSTICS, VCVROBUST, VCV]
\end_layout

\begin_layout Plain Layout

                                       = heterogeneousar(Y,CONSTANT,P,NW,SPEC)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

INPUTS:
\end_layout

\begin_layout Plain Layout

  Y            - A column of data
\end_layout

\begin_layout Plain Layout

  CONSTANT     - Scalar variable: 1 to include a constant, 0 to exclude
\end_layout

\begin_layout Plain Layout

  P            - A column vector or a matrix.
\end_layout

\begin_layout Plain Layout

                   If a vector, should include the indices to use for the
 lag length, such as in
\end_layout

\begin_layout Plain Layout

                   the usual case for monthly volatility data P=[1; 5; 22].
 This indicates that
\end_layout

\begin_layout Plain Layout

                   the 1st lag, average of the first 5 lags, and the average
 of the first 22 lags
\end_layout

\begin_layout Plain Layout

                   should be used in estimation.
  NOTE: When using the vector format, P MUST BE A
\end_layout

\begin_layout Plain Layout

                   COLUMN VECTOR to avoid ambiguity with the matrix format.
  If P is a matrix, the
\end_layout

\begin_layout Plain Layout

                   values indicate the start and end points of the averages.
  The above vector can
\end_layout

\begin_layout Plain Layout

                   be equivalently expressed as P=[1 1;1 5;1 22].
  The matrix notation allows for
\end_layout

\begin_layout Plain Layout

                   the possibility of skipping lags, for example P=[1 1;
 5 5; 1 22]; would have
\end_layout

\begin_layout Plain Layout

                   the 1st lag, the 5th lag and the average of lags 1 to
 22.
  NOTE: When using the
\end_layout

\begin_layout Plain Layout

                   matrix format, P MUST be # Entries by 2.
\end_layout

\begin_layout Plain Layout

  NW           - [OPTIONAL] Number of lags to use when computing the long-run
 variance of the
\end_layout

\begin_layout Plain Layout

                   scores in VCVROBUST.
  Default is 0.
\end_layout

\begin_layout Plain Layout

  SPEC         - [OPTIONAL] String value indicating which representation
 to use in parameter
\end_layout

\begin_layout Plain Layout

                   estimation.
  May be:
\end_layout

\begin_layout Plain Layout

                    'STANDARD' - Usual representation with overlapping lags
\end_layout

\begin_layout Plain Layout

                    'MODIFIED' - Modified representation with non-overlapping
 lags
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

OUTPUTS:
\end_layout

\begin_layout Plain Layout

  PARAMETERS   - A 1+length(p) column vector of parameters with
\end_layout

\begin_layout Plain Layout

                 [constant har(1) ...
 har(P)]'
\end_layout

\begin_layout Plain Layout

  ERRORS       - A T by 1 length vector of errors from the regression with
 0s in first max(max(P))
\end_layout

\begin_layout Plain Layout

                   places
\end_layout

\begin_layout Plain Layout

  SEREGRESSION - The standard error of the regressions
\end_layout

\begin_layout Plain Layout

  DIAGNOSTICS  - A structure of diagnostic information containing:
\end_layout

\begin_layout Plain Layout

                    P          - List of HAR lags used in estimation
\end_layout

\begin_layout Plain Layout

                    C          - Indicator if constant was included
\end_layout

\begin_layout Plain Layout

                    AIC        - Akaike Information Criteria for the estimated
 model
\end_layout

\begin_layout Plain Layout

                    SBIC       - Bayesian (Schwartz) Information Criteria
 for the
\end_layout

\begin_layout Plain Layout

                                  estimated model
\end_layout

\begin_layout Plain Layout

                    T          - Number of observations
\end_layout

\begin_layout Plain Layout

                    ADJT       - Length of sample used for estimation
\end_layout

\begin_layout Plain Layout

                    ARROOTS    - The characteristic roots of the ARMA
\end_layout

\begin_layout Plain Layout

                                  process evaluated at the estimated parameters
\end_layout

\begin_layout Plain Layout

                    ABSARROOTS - The absolute value (complex modulus if
\end_layout

\begin_layout Plain Layout

                                   complex) of the ARROOTS
\end_layout

\begin_layout Plain Layout

  VCVROBUST    - Robust parameter covariance matrix, White if NW = 0,
\end_layout

\begin_layout Plain Layout

                   Newey-West if NW>0
\end_layout

\begin_layout Plain Layout

  VCV          - Non-robust standard errors (inverse Hessian)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

EXAMPLES:
\end_layout

\begin_layout Plain Layout

  Simulate data from a HAR model
\end_layout

\begin_layout Plain Layout

      y = armaxfilter_simulate(1000,1,22,[.1 .3/4*ones(1,4) .55/17*ones(1,17)])
\end_layout

\begin_layout Plain Layout

  Standard HAR with 1, 5 and 22 day lags
\end_layout

\begin_layout Plain Layout

      parameters = heterogeneousar(Y,1,[1 5 22]')
\end_layout

\begin_layout Plain Layout

  Standard HAR with 1, 5 and 22 days lags using matrix notation
\end_layout

\begin_layout Plain Layout

      parameters = heterogeneousar(Y,1,[1 1;1 5;1 22])
\end_layout

\begin_layout Plain Layout

  Standard HAR with 1, 5 and 22 day lags using the non-overlapping reparameteriz
ation
\end_layout

\begin_layout Plain Layout

      parameters = heterogeneousar(Y,1,[1 5 22]',[],'MODIFIED')
\end_layout

\begin_layout Plain Layout

  Standard HAR with 1, 5 and 22 day lags with Newey-West standard errors
\end_layout

\begin_layout Plain Layout

      [parameters, errors, seregression, diagnostics, vcvrobust, vcv] =
 ...
\end_layout

\begin_layout Plain Layout

                   heterogeneousar(Y,1,[1 5 22]',ceil(length(Y)^(1/3)))
\end_layout

\begin_layout Plain Layout

  Nonstandard HAR with lags 1, 2  and 10-22 day lags
\end_layout

\begin_layout Plain Layout

      parameters = heterogeneousar(Y,1,[1 1;2 2;10 22])
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

See also ARMAXFILTER, TARCH
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Residual Plotting: 
\family typewriter
tsresidualplot
\end_layout

\begin_layout Standard
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ARMA! @
\family typewriter
tsresidualplot
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ARMA!Residual Plotting
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Provides a convenient tool to quickly plot errors from ARMA models.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

T=1000; phi = .9; constant = 1; ARorder = 1;
\end_layout

\begin_layout Plain Layout

y = armaxfilter_simulate(T, constant, ARorder, phi);
\end_layout

\begin_layout Plain Layout

% ARMA(1,1) with a constant;
\end_layout

\begin_layout Plain Layout

[parameters, LL, errors] = armaxfilter(y, 1, 1, 1);
\end_layout

\begin_layout Plain Layout

tsresidualplot(y,errors)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% With dates for 1000 days beginning at Jan 1 2007
\end_layout

\begin_layout Plain Layout

dates = datenum('Jan-01-2007'):datenum('Jan-01-2007')+999;
\end_layout

\begin_layout Plain Layout

% ARMA(1,1) with a constant;
\end_layout

\begin_layout Plain Layout

[parameters, LL, errors] = armaxfilter(y, 1, 1, 1);
\end_layout

\begin_layout Plain Layout

tsresidualplot(y,errors, dates)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
The output of 
\family typewriter
tsresidualplot
\family default
 is in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "FigTSResid"

\end_inset

 (this was generated suing the second command above):
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement !ht
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename tsresidualplot.pdf
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace -2in*
\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
The output of 
\family typewriter
tsresidplot
\family default
 generated using the code in the second example.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "FigTSResid"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Required Inputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[outputs] = tsresidualplot(Y,ERRORS)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
Y
\family default
: 
\begin_inset Formula $T$
\end_inset

 by 1 vector of modeled data 
\end_layout

\begin_layout Itemize

\family typewriter
ERRORS
\family default
: 
\begin_inset Formula $T$
\end_inset

 by 1 vector of residuals 
\end_layout

\begin_layout Subsubsection
Optional Inputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[outputs] = tsresidualplot(Y,ERRORS,DATES)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
DATES
\family default
: 
\begin_inset Formula $T$
\end_inset

 by 1 vector of MATLAB serial dates 
\end_layout

\begin_layout Subsubsection
Outputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[HAXIS,HFIG] = tsresidualplot(inputs)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
HAXIS
\family default
: 2 by 1 vector of handles to the plot axes 
\end_layout

\begin_layout Itemize

\family typewriter
HFIG
\family default
: Handle to the figure containing the residual plot 
\end_layout

\begin_layout Subsubsection
Comments
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Produces a plot for visualizing time series data and residuals from a time
 series model
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

USAGE:
\end_layout

\begin_layout Plain Layout

  tsresidualplot(Y,ERRORS)
\end_layout

\begin_layout Plain Layout

  [HAXIS,HFIG] = tsresidualplot(Y,ERRORS,DATES)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

INPUTS:
\end_layout

\begin_layout Plain Layout

  Y      - A T by 1 vector of data
\end_layout

\begin_layout Plain Layout

  ERRORS - A T by 1 vector of residuals, usually produced by ARMAXFILTER
\end_layout

\begin_layout Plain Layout

  DATES  - [OPTIONAL] A T by 1 vector of MATLAB dates (i.e.
 should be 733043 rather than '1-1-2007').
\end_layout

\begin_layout Plain Layout

             If provided, the data and residuals will be plotted against
 the date rather than the
\end_layout

\begin_layout Plain Layout

             observation index
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

OUTPUTS:
\end_layout

\begin_layout Plain Layout

  HAXIS  - A 2 by 1 vector axis handles to the top subplots
\end_layout

\begin_layout Plain Layout

  HFIG   - A scalar containing the figure handle
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

COMMENTS:
\end_layout

\begin_layout Plain Layout

  HAXIS can be used to change the format of the dates on the x-axis when
 MATLAB dates are provides
\end_layout

\begin_layout Plain Layout

  by calling
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

       datetick(HAXIS(j),'x',DATEFORMAT,'keeplimits')
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  where j is 1 (top) or 2 (bottom subplot) and DATEFORMAT is a numeric value
 between 28.
  See doc
\end_layout

\begin_layout Plain Layout

  datetick for more details.
  For example,
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

       datetick(HAXIS(1),'x',25,'keeplimits')
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  will change the top subplot's x-axis labels to the form yy/mm/dd.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

EXAMPLES:
\end_layout

\begin_layout Plain Layout

  Estimate a model and produce a plot of fitted and residuals
\end_layout

\begin_layout Plain Layout

      [parameters, LL, errors] = armaxfilter(y, 1, 1, 1);
\end_layout

\begin_layout Plain Layout

      tsresidualplot(y, errors)
\end_layout

\begin_layout Plain Layout

  Estimate a model and produce a plot of fitted and residuals with dates
\end_layout

\begin_layout Plain Layout

      [parameters, LL, errors] = armaxfilter(y, 1, 1, 1);
\end_layout

\begin_layout Plain Layout

      dates = datenum('01Jan2007') + (1:length(y));
\end_layout

\begin_layout Plain Layout

      tsresidualplot(y, errors, dates)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

 See also ARMAXFILTER, DATETICK
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Characteristic Roots: 
\family typewriter
armaroots
\end_layout

\begin_layout Standard
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ARMA! @
\family typewriter
armaroots
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ARMA!Characteristic Roots
\end_layout

\end_inset

 Computes the characteristic roots (and their absolute values) of the characteri
stic equation that correspond to an ARMAX(P,Q) equation.
 It is usually called after or during 
\family typewriter
armaxfilter
\family default
.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard

\family typewriter
armaroots
\family default
 can be used with either the output of 
\family typewriter
armaxfilter
\family default
 or with hypothetical parameters.
 The first example shows how to use them with 
\family typewriter
armaxfilter
\family default
 while the second and third demonstrate their use with hypothetical ARMA
 parameters.
 Note that the AR and MA lag lengths are identical to those used in 
\family typewriter
armaxfilter
\family default
, so a regular ARMA(P,Q) requires 
\family typewriter
[1:P]
\family default
 and 
\family typewriter
[1:Q]
\family default
 to be input.
 This allows roots of irregular ARMA(P,Q) to be computed by including the
 indices of the lags used (i.e.
 
\family typewriter
[1 3]
\family default
).
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

T=1000; phi = .9; constant = 1; ARorder = 1;
\end_layout

\begin_layout Plain Layout

y = armaxfilter_simulate(T, constant, ARorder, phi);
\end_layout

\begin_layout Plain Layout

% ARMA(1,1) with a constant;
\end_layout

\begin_layout Plain Layout

[parameters, LL, errors] = armaxfilter(y, 1, 1, 1);
\end_layout

\begin_layout Plain Layout

[arroots, absarroots] = armaroots(parameters, 1, 1, 1)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

arroots =
\end_layout

\begin_layout Plain Layout

    0.9023
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

absarroots =
\end_layout

\begin_layout Plain Layout

    0.9023
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% An ARMA(2,2)
\end_layout

\begin_layout Plain Layout

phi = [1.3 -.35]; theta = [.4 .3]; parameters=[1 phi theta]';
\end_layout

\begin_layout Plain Layout

[arroots, absarroots] = armaroots(parameters, 1, [1 2], [1 2])
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

arroots =
\end_layout

\begin_layout Plain Layout

    0.9193
\end_layout

\begin_layout Plain Layout

    0.3807
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

absarroots =
\end_layout

\begin_layout Plain Layout

    0.9193
\end_layout

\begin_layout Plain Layout

    0.3807
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% An irregular AR(3)
\end_layout

\begin_layout Plain Layout

% Note that phi contains phi1 and phi3 and that there is no phi2
\end_layout

\begin_layout Plain Layout

phi = [1.3 -.35]; parameters = [1 phi]';
\end_layout

\begin_layout Plain Layout

% There will be three roots
\end_layout

\begin_layout Plain Layout

[arroots, absarroots] = armaroots(parameters, 1, [1 3],[])
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

arroots =
\end_layout

\begin_layout Plain Layout

   0.8738 + 0.1364i
\end_layout

\begin_layout Plain Layout

   0.8738 - 0.1364i
\end_layout

\begin_layout Plain Layout

  -0.4475
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

absarroots =
\end_layout

\begin_layout Plain Layout

    0.8843
\end_layout

\begin_layout Plain Layout

    0.8843
\end_layout

\begin_layout Plain Layout

    0.4475
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Required Inputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[outputs] = armaroots(PARAMETERS,CONSTANT,P,Q)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
PARAMETERS
\family default
: A vector of parameters.
 The size of parameters is determined by whether the constant is included,
 the number of lags included in the AR and MA portions and the number of
 exogenous variables included (if any).
 
\end_layout

\begin_layout Itemize

\family typewriter
CONSTANT
\family default
: Logical value indicating whether to include a constant (1 to include,
 0 to exclude).
 
\end_layout

\begin_layout Itemize

\family typewriter
P
\family default
: Column vector containing indices for the AR component in the model.
 
\end_layout

\begin_layout Itemize

\family typewriter
Q
\family default
: Column vector containing indices for the MA component in the model 
\end_layout

\begin_layout Subsubsection
Optional Inputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[outputs] = armaroots(PARAMETERS,CONSTANT,P,Q,X)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
X
\family default
: 
\begin_inset Formula $T$
\end_inset

 by 
\begin_inset Formula $k$
\end_inset

 matrix of exogenous regressors 
\end_layout

\begin_layout Subsubsection
Outputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[ARROOTS,ABSARROOTS] = armaroots(inputs)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
ARROOTS
\family default
: Vector containing roots of characteristic function associated with AR.
 The highest lag in 
\family typewriter
P
\family default
 determines the number of roots.
 
\end_layout

\begin_layout Itemize

\family typewriter
ABSARROOTS
\family default
: Complex modulus of the characteristic roots.
 
\end_layout

\begin_layout Subsubsection
Comments
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Computes the roots of the characteristic equation of an ARMAX(P,Q) as parameteri
zed by ARMAXFILTER
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

USAGE:
\end_layout

\begin_layout Plain Layout

  [ARROOTS] = armaroots(PARAMETERS,CONSTANT,P,Q)
\end_layout

\begin_layout Plain Layout

  [ARROOTS,ABSARROOTS] = armaroots(PARAMETERS,CONSTANT,P,Q,X)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

INPUTS:
\end_layout

\begin_layout Plain Layout

  PARAMETERS - A CONSTANT+length(P)+length(Q)+size(X,2) by 1 vector of parameter
s, usually an
\end_layout

\begin_layout Plain Layout

                 output from ARMAXFILTER
\end_layout

\begin_layout Plain Layout

  CONSTANT   - Scalar variable: 1 to include a constant, 0 to exclude
\end_layout

\begin_layout Plain Layout

  P          - Non-negative integer vector representing the AR orders to
 include in the model.
\end_layout

\begin_layout Plain Layout

  Q          - Non-negative integer vector representing the MA orders to
 include in the model.
\end_layout

\begin_layout Plain Layout

  X          - [OPTIONAL] A T by K matrix of exogenous variables.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

OUTPUTS:
\end_layout

\begin_layout Plain Layout

  ARROOTS     - A max(P) by 1 vector containing the roots of the characteristic
 equation
\end_layout

\begin_layout Plain Layout

                  corresponding to the ARMA model input
\end_layout

\begin_layout Plain Layout

  ABSARROOTS  - Absolute value or complex modulus of the autoregressive
 roots
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

COMMENTS:
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

EXAMPLES:
\end_layout

\begin_layout Plain Layout

  Compute the AR roots of an ARMA(2,2)
\end_layout

\begin_layout Plain Layout

      phi = [1.3 -.35]; theta = [.4 .3]; parameters=[1 phi theta]';
\end_layout

\begin_layout Plain Layout

      [arroots, absarroots] = armaroots(parameters, 1, [1 2], [1 2])
\end_layout

\begin_layout Plain Layout

  Compute the AR roots of an irregular AR(3)
\end_layout

\begin_layout Plain Layout

      phi = [1.3 -.35]; parameters = [1 phi]';
\end_layout

\begin_layout Plain Layout

      [arroots, absarroots] = armaroots(parameters, 1, [1 3],[])
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

See also ARMAXFILTER, ROOTS
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Information Criteria: 
\family typewriter
aicsbic
\end_layout

\begin_layout Standard
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ARMA! @
\family typewriter
aicsbic
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Information Criteria!Akaike
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Information Criteria!Schwartz/Bayes
\end_layout

\end_inset

 Computes the Akaike Information Criteria (AIC) and the Schwartz/Bayes Informati
on Criterion for an ARMAX(P,Q).
 The AIC is given by 
\begin_inset Formula 
\[
AIC=\ln{\hat{\sigma}^{2}}+\frac{2k}{T}
\]

\end_inset

where 
\begin_inset Formula $k$
\end_inset

 is the number of parameters in the model, including the constant, AR coefficien
ts, MA coefficient and any X variables.
 The SBIC is given by 
\begin_inset Formula 
\[
SBIC=\ln{\hat{\sigma}^{2}}+\frac{\ln{T}k}{T}.
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

% This example continues the examples from the ARMAXFILTER section
\end_layout

\begin_layout Plain Layout

T=1000; phi = .9; constant = 1; ARorder = 1;
\end_layout

\begin_layout Plain Layout

y = armaxfilter_simulate(T, constant, ARorder, phi);
\end_layout

\begin_layout Plain Layout

p=1; q=0; constant =1;
\end_layout

\begin_layout Plain Layout

% AR(1) with a constant;
\end_layout

\begin_layout Plain Layout

[parameters, LL, errors] = armaxfilter(y, constant, p, q);
\end_layout

\begin_layout Plain Layout

[aic,sbic] = aicsbic(errors,constant,p,q)
\end_layout

\begin_layout Plain Layout

p=1; q=1; constant =1;
\end_layout

\begin_layout Plain Layout

% AR(1) with a constant;
\end_layout

\begin_layout Plain Layout

[parameters, LL, errors] = armaxfilter(y, constant, p, q);
\end_layout

\begin_layout Plain Layout

[aic,sbic] = aicsbic(errors,constant,p,q)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%AR(1), the smaller one (also true model)
\end_layout

\begin_layout Plain Layout

aic =
\end_layout

\begin_layout Plain Layout

   -0.0334
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

sbic =
\end_layout

\begin_layout Plain Layout

   -0.0235
\end_layout

\begin_layout Plain Layout

% ARMA(1,1)
\end_layout

\begin_layout Plain Layout

aic =
\end_layout

\begin_layout Plain Layout

   -0.0327
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

sbic =
\end_layout

\begin_layout Plain Layout

   -0.0179
\end_layout

\begin_layout Plain Layout

% If using exogenous variables,
\end_layout

\begin_layout Plain Layout

[aic,sbic] = aicsbic(errors,constant,p,q,X)
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Required Inputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[outputs] = aicsbic(ERRORS,CONSTANT,P,Q)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
ERRORS
\family default
: A 
\begin_inset Formula $T$
\end_inset

 by 1 vector of estimated errors from the ARMAX model 
\end_layout

\begin_layout Itemize

\family typewriter
CONSTANT
\family default
: Logical value indicating whether to include a constant (1 to include,
 0 to exclude).
 
\end_layout

\begin_layout Itemize

\family typewriter
P
\family default
: Column vector containing indices for the AR component in the model.
 
\end_layout

\begin_layout Itemize

\family typewriter
Q
\family default
: Column vector containing indices for the MA component in the model 
\end_layout

\begin_layout Subsubsection
Optional Inputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[outputs] = aicsbic(ERRORS,CONSTANT,P,Q,X)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
X
\family default
: 
\begin_inset Formula $T$
\end_inset

 by 
\begin_inset Formula $k$
\end_inset

 matrix of exogenous regressors used in ARMAX estimation 
\end_layout

\begin_layout Subsubsection
Outputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[AIC,SBIC] = aicsbic(inputs)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
AIC
\family default
: Akaike Information Criteria 
\end_layout

\begin_layout Itemize

\family typewriter
SBIC
\family default
: Schwartz/Bayesian Information Criteria 
\end_layout

\begin_layout Subsubsection
Comments
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Computes the Akaike and Schwartz/Bayes Information Criteria for an ARMA(P,Q)
 as parameterized in
\end_layout

\begin_layout Plain Layout

ARMAXFILTER
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

USAGE:
\end_layout

\begin_layout Plain Layout

  [AIC] = aicsbic(ERRORS,CONSTANT,P,Q)
\end_layout

\begin_layout Plain Layout

  [AIC,SBIC] = aicsbic(ERRORS,CONSTANT,P,Q,X)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

INPUTS:
\end_layout

\begin_layout Plain Layout

  ERRORS   - A T by 1 length vector of errors from the regression
\end_layout

\begin_layout Plain Layout

  CONSTANT - Scalar variable: 1 to include a constant, 0 to exclude
\end_layout

\begin_layout Plain Layout

  P        - Non-negative integer vector representing the AR orders to include
 in the model.
\end_layout

\begin_layout Plain Layout

  Q        - Non-negative integer vector representing the MA orders to include
 in the model.
\end_layout

\begin_layout Plain Layout

  X        - [OPTIONAL]  a T by K  matrix of exogenous variables.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

OUTPUTS:
\end_layout

\begin_layout Plain Layout

  AIC       - The Akaike Information Criteria
\end_layout

\begin_layout Plain Layout

  SBIC      - The Schwartz/Bayes Information Criteria
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

COMMENTS:
\end_layout

\begin_layout Plain Layout

  This is a helper for ARMAXFILTER and uses the same inputs, CONSTANT, P,
 Q and X.
  ERRORS should
\end_layout

\begin_layout Plain Layout

  be the errors returned from a call to ARMAXFILTER with the same values
 of P, Q, etc.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

EXAMPLES:
\end_layout

\begin_layout Plain Layout

  Compute AIC and SBIC from an ARMA
\end_layout

\begin_layout Plain Layout

      [parameters, LL, errors] = armaxfilter(y, constant, p, q);
\end_layout

\begin_layout Plain Layout

      [aic,sbic] = aicsbic(errors,constant,p,q)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

See also ARMAXFILTER, HETEROGENEOUSAR
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
ARMA Forecasting
\end_layout

\begin_layout Subsection
Forecasting: 
\family typewriter
arma_forecaster
\end_layout

\begin_layout Standard
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ARMA! @
\family typewriter
arma_forecaster
\end_layout

\end_inset

 Produces h-step ahead forecasts from an ARMA(P,Q) model.
 
\family typewriter
arma_forecaster
\family default
 also computed h-step ahead forecast standard deviation, aligns 
\begin_inset Formula $y_{t+h}$
\end_inset

 and 
\begin_inset Formula $\hat{y}_{t+h|t}$
\end_inset

 (so that they both appear at time 
\begin_inset Formula $t$
\end_inset

) and computes forecast errors.
\end_layout

\begin_layout Standard

\family typewriter
arma_forecaster
\family default
 produces 
\begin_inset Formula $\hat{y}_{t+h|t}$
\end_inset

, the 
\begin_inset Formula $h$
\end_inset

-step ahead forecast of 
\begin_inset Formula $y$
\end_inset

 starting at time 
\begin_inset Formula $t$
\end_inset

, starting at observation 
\begin_inset Formula $R$
\end_inset

 and continuing until the end of the sample.
 The function will return a vector containing 
\begin_inset Formula $R$
\end_inset

 
\begin_inset Quotes eld
\end_inset

NaN
\begin_inset Quotes erd
\end_inset

 values (since there are no forecasts for the first 
\begin_inset Formula $R$
\end_inset

 observations) followed by 
\begin_inset Formula $T-R$
\end_inset

 elements forming the sequence 
\begin_inset Formula $\hat{y}_{r+h|r},\,\hat{y}_{r+h+1|r+1},\ldots,\hat{y}_{T+h|T}$
\end_inset

.
 The function will also return 
\begin_inset Formula $y_{t+h}$
\end_inset

 shifted back 
\begin_inset Formula $h$
\end_inset

 places.
 The first 
\begin_inset Formula $R$
\end_inset

 elements of 
\begin_inset Formula $y^{t+h}$
\end_inset

 will also be 
\begin_inset Quotes eld
\end_inset

NaN
\begin_inset Quotes erd
\end_inset

.
 The next 
\begin_inset Formula $T-R-h$
\end_inset

 will be 
\begin_inset Formula ${y}_{r+h},\,{y}_{r+h+1},\ldots,{y}_{T+h}$
\end_inset

 and the final 
\begin_inset Formula $h$
\end_inset

 are also 
\begin_inset Quotes eld
\end_inset

NaN
\begin_inset Quotes erd
\end_inset

.
 The 
\begin_inset Formula $h$
\end_inset

-NaNs at the end of the sample are present because 
\begin_inset Formula $y_{T+1},\,\ldots y_{T+h}$
\end_inset

 are not available (since by construction the series end at observation
 
\begin_inset Formula $T$
\end_inset

).
 The function also produces the forecast errors which are simply 
\begin_inset Formula $\hat{e}_{t+h|t}=y_{t+h}-\hat{y}_{t+h|t}$
\end_inset

, with the error from the forecast computed at time-
\begin_inset Formula $t$
\end_inset

 placed in the 
\begin_inset Formula $t$
\end_inset

þelement of the vector.
 The final output of this function is the forecast standard deviation which
 is computed assuming homoskedasticity
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

T=1000; phi = .9; constant = 1; ARorder = 1;
\end_layout

\begin_layout Plain Layout

y = armaxfilter_simulate(T, constant, ARorder, phi);
\end_layout

\begin_layout Plain Layout

% AR(1) with a constant;
\end_layout

\begin_layout Plain Layout

[parameters, LL, errors] = armaxfilter(y(1:500), 1, 1, 0);
\end_layout

\begin_layout Plain Layout

% Produces the 1-step ahead forecast from an AR(1) starting from observation
 500
\end_layout

\begin_layout Plain Layout

[yhattph,yhat,forerr,ystd]=arma_forecaster(y,parameters,1,1,[],500,1);
\end_layout

\begin_layout Plain Layout

% Produces the 10-step ahead forecast starting from observation 500
\end_layout

\begin_layout Plain Layout

ystd
\end_layout

\begin_layout Plain Layout

ystd =
\end_layout

\begin_layout Plain Layout

    1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

[yhattph, yhat, forerr, ystd]=arma_forecaster(y, parameters, 1, 1, [] ,
 500, 10, 1);
\end_layout

\begin_layout Plain Layout

ystd
\end_layout

\begin_layout Plain Layout

ystd =
\end_layout

\begin_layout Plain Layout

    1.9002
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Comments
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Produces h-step ahead forecasts from ARMA(P,Q) models starting at some point
\end_layout

\begin_layout Plain Layout

in the sample, R, and ending at the end of the sample.
  Also shifts the
\end_layout

\begin_layout Plain Layout

data to align y(t+h) with y(t+h|t) in slot t, computes the theoretical
\end_layout

\begin_layout Plain Layout

forecast standard deviation (assuming homoskedasticity) and the forecast
\end_layout

\begin_layout Plain Layout

errors.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

USAGE:
\end_layout

\begin_layout Plain Layout

 [YHATTPH] = arma_forecaster(Y,PARAMETERS,CONSTANT,P,Q,R,H)
\end_layout

\begin_layout Plain Layout

 [YHATTPH,YTPH,FORERR,YSTD] =
\end_layout

\begin_layout Plain Layout

             arma_forecaster(Y,PARAMETERS,CONSTANT,P,Q,R,H,SEREGRESSION)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

INPUTS:
\end_layout

\begin_layout Plain Layout

  Y             - A column of data
\end_layout

\begin_layout Plain Layout

  CONSTANT      - Scalar variable: 1 if the model includes a constant, 0
 to exclude
\end_layout

\begin_layout Plain Layout

  P             - Non-negative integer vector representing the AR orders
\end_layout

\begin_layout Plain Layout

                   included in the model.
\end_layout

\begin_layout Plain Layout

  Q             - Non-negative integer vector representing the MA orders
\end_layout

\begin_layout Plain Layout

                   included in the model.
\end_layout

\begin_layout Plain Layout

  R             - Length of sample used in estimation.
  Sample is split
\end_layout

\begin_layout Plain Layout

                   up between R and P, where the first R (regression) are
\end_layout

\begin_layout Plain Layout

                   used for estimating the model and the remainder are
\end_layout

\begin_layout Plain Layout

                   used for prediction (P) so that R+P=T.
\end_layout

\begin_layout Plain Layout

  H             - The forecast horizon
\end_layout

\begin_layout Plain Layout

  SEREGRESSION  - [OPTIONAL] The standard error of the regression.
  Used
\end_layout

\begin_layout Plain Layout

                   to compute confidence intervals.
  If omitted,
\end_layout

\begin_layout Plain Layout

                   SEREGRESSION is set to 1.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

OUTPUTS:
\end_layout

\begin_layout Plain Layout

 YHATTPH        - h-step ahead forecasts of Y.
  The element in position t
\end_layout

\begin_layout Plain Layout

                   of YHATTPH is the time t forecast of Y(t+h).
  The
\end_layout

\begin_layout Plain Layout

                   first R elements of YHATTPH are NaN.
  The next T-R-H
\end_layout

\begin_layout Plain Layout

                   are pseudo in-sample forecasts while the final H are
\end_layout

\begin_layout Plain Layout

                   out-of-sample.
\end_layout

\begin_layout Plain Layout

 YTPH           - Value of original data at time t+h shifted to position
\end_layout

\begin_layout Plain Layout

                   t.
  The first R elements of YTPH are NaN.
  The next
\end_layout

\begin_layout Plain Layout

                   T-R-H are the values y(R+H),...,y(T), and the final H
\end_layout

\begin_layout Plain Layout

                   are NaN since there is no data available for comparing
\end_layout

\begin_layout Plain Layout

                   to the final H forecasts.
\end_layout

\begin_layout Plain Layout

 FORERR         - The forecast errors, YHATTPH-YTPH
\end_layout

\begin_layout Plain Layout

 YSTD           - The theoretical standard deviation of the h-step ahead
\end_layout

\begin_layout Plain Layout

                   forecast (assumed homoskedasticity)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

COMMENTS:
\end_layout

\begin_layout Plain Layout

Values not relevant for the forecasting exercise have NaN returned.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

See also armaxfilter
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Sample autocorrelation and partial autocorrelation
\end_layout

\begin_layout Subsection
Sample Autocorrelations: 
\family typewriter
sacf
\end_layout

\begin_layout Standard
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ARMA! @
\family typewriter
sacf
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Autocorrelation!Sample
\end_layout

\end_inset

 Computes the sample autocorrelations and standard errors.
 Standard errors can be computed under assumptions of homoskedasticity or
 heteroskedasticity.
 The 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
sth
\end_layout

\end_inset

 sample autocorrelation is computed using the regression 
\begin_inset Formula 
\[
y_{t}=\rho_{s}y_{t-s}+\epsilon_{t}
\]

\end_inset

where the mean has been subtracted from the data and the standard errors
 use the usual OLS covariance estimators, either the homoskedastic form
 or White's.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

x=randn(1000,1);% Define x to be a 1000 by 1 vector or random data
\end_layout

\begin_layout Plain Layout

[ac, acstd] = sacf(x,5) % Results will vary based on the random numbers
 used
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

ac =
\end_layout

\begin_layout Plain Layout

   -0.0250
\end_layout

\begin_layout Plain Layout

   -0.0608
\end_layout

\begin_layout Plain Layout

   -0.0080
\end_layout

\begin_layout Plain Layout

    0.0123
\end_layout

\begin_layout Plain Layout

   -0.0067
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

acstd =
\end_layout

\begin_layout Plain Layout

    0.0331
\end_layout

\begin_layout Plain Layout

    0.0332
\end_layout

\begin_layout Plain Layout

    0.0312
\end_layout

\begin_layout Plain Layout

    0.0310
\end_layout

\begin_layout Plain Layout

    0.0323
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

[ac, acstd] = sacf(x,5,0) % Non-heteroskedasticity robust result
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

ac =
\end_layout

\begin_layout Plain Layout

   -0.0250
\end_layout

\begin_layout Plain Layout

   -0.0608
\end_layout

\begin_layout Plain Layout

   -0.0080
\end_layout

\begin_layout Plain Layout

    0.0123
\end_layout

\begin_layout Plain Layout

   -0.0067
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

acstd =
\end_layout

\begin_layout Plain Layout

    0.0316
\end_layout

\begin_layout Plain Layout

    0.0317
\end_layout

\begin_layout Plain Layout

    0.0317
\end_layout

\begin_layout Plain Layout

    0.0317
\end_layout

\begin_layout Plain Layout

    0.0317
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Comments
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Computes sample autocorrelations and standard deviation using either
\end_layout

\begin_layout Plain Layout

heteroskedasticity robust standard errors or classic (homoskedastic)
\end_layout

\begin_layout Plain Layout

standard errors
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

USAGE:
\end_layout

\begin_layout Plain Layout

 [AC,ACSTD] = sacf(DATA,LAGS)
\end_layout

\begin_layout Plain Layout

 [AC,ACSTD] = sacf(DATA,LAGS,ROBUST)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

INPUTS:
\end_layout

\begin_layout Plain Layout

 DATA      - A T by 1 vector of data
\end_layout

\begin_layout Plain Layout

 LAGS      - The number of autocorrelations to compute
\end_layout

\begin_layout Plain Layout

 ROBUST    - [OPTIONAL] Logical variable (0 (non-robust) or 1 (robust))
 to
\end_layout

\begin_layout Plain Layout

             indicate whether heteroskedasticity robust standard errors
\end_layout

\begin_layout Plain Layout

             should be used.
 Default is to use robust standard errors
\end_layout

\begin_layout Plain Layout

             (ROBUST=1).
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

OUTPUTS:
\end_layout

\begin_layout Plain Layout

 AC        - A LAGS by 1 vector of autocorrelations
\end_layout

\begin_layout Plain Layout

 PVAL      - A LAGS by 1 vector of standard deviations
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

COMMENTS:
\end_layout

\begin_layout Plain Layout

 Sample autocorrelations are computed using the maximum number of
\end_layout

\begin_layout Plain Layout

 observations for each lag.
  For example, if DATA has 100 observations,
\end_layout

\begin_layout Plain Layout

 the first autocorrelation is computed using 99 data points, the second
\end_layout

\begin_layout Plain Layout

 with 98 data points and so on.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Sample Partial Autocorrelations: 
\family typewriter
spacf
\end_layout

\begin_layout Standard
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ARMA! @
\family typewriter
spacf
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Partial Autocorrelation!Sample
\end_layout

\end_inset

 Computes the partial sample autocorrelations and standard errors.
 Standard errors can be computed under assumptions of homoskedasticity or
 heteroskedasticity.
 The 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
sth
\end_layout

\end_inset

 sample autocorrelation is computed using the regression 
\begin_inset Formula 
\[
y_{t}=\phi_{1}y_{t-1}+\ldots+\phi_{s-1}y_{t-s+1}+\varphi_{s}y_{t-s}+\epsilon_{t}
\]

\end_inset

and the standard errors use the usual OLS covariance estimators, either
 the homoskedastic form or White's.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

x=randn(1000,1);% Define x to be a 1000 by 1 vector or random data
\end_layout

\begin_layout Plain Layout

[pac, pacstd] = spacf(x,5) % Results will vary based on the random numbers
 used
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

pac =
\end_layout

\begin_layout Plain Layout

    0.0098
\end_layout

\begin_layout Plain Layout

    0.0015
\end_layout

\begin_layout Plain Layout

    0.0432
\end_layout

\begin_layout Plain Layout

    0.0006
\end_layout

\begin_layout Plain Layout

    0.0768
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

pacstd =
\end_layout

\begin_layout Plain Layout

    0.0316
\end_layout

\begin_layout Plain Layout

    0.0313
\end_layout

\begin_layout Plain Layout

    0.0315
\end_layout

\begin_layout Plain Layout

    0.0311
\end_layout

\begin_layout Plain Layout

    0.0324
\end_layout

\begin_layout Plain Layout

[pac, pacstd] = spacf(x,5,0) % Non-heteroskedasticity robust result
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

pac =
\end_layout

\begin_layout Plain Layout

    0.0098
\end_layout

\begin_layout Plain Layout

    0.0015
\end_layout

\begin_layout Plain Layout

    0.0432
\end_layout

\begin_layout Plain Layout

    0.0006
\end_layout

\begin_layout Plain Layout

    0.0768
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

pacstd =
\end_layout

\begin_layout Plain Layout

    0.0316
\end_layout

\begin_layout Plain Layout

    0.0316
\end_layout

\begin_layout Plain Layout

    0.0316
\end_layout

\begin_layout Plain Layout

    0.0316
\end_layout

\begin_layout Plain Layout

    0.0316
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Comments
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Computes sample partial autocorrelations and standard deviation using
\end_layout

\begin_layout Plain Layout

either heteroskedasticity robust standard errors or classic
\end_layout

\begin_layout Plain Layout

(homoskedastic) standard errors
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

USAGE:
\end_layout

\begin_layout Plain Layout

 [PAC,PACSTD] = spacf(DATA,LAGS)
\end_layout

\begin_layout Plain Layout

 [PAC,PACSTD] = spacf(DATA,LAGS,ROBUST)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

INPUTS:
\end_layout

\begin_layout Plain Layout

 DATA      - A T by 1 vector of data
\end_layout

\begin_layout Plain Layout

 LAGS      - The number of autocorrelations to compute
\end_layout

\begin_layout Plain Layout

 ROBUST    - [OPTIONAL] Logical variable (0 (non-robust) or 1 (robust))
 to
\end_layout

\begin_layout Plain Layout

             indicate whether heteroskedasticity robust standard errors
\end_layout

\begin_layout Plain Layout

             should be used.
 Default is to use robust standard errors
\end_layout

\begin_layout Plain Layout

             (ROBUST=1).
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

OUTPUTS:
\end_layout

\begin_layout Plain Layout

 PAC        - A LAGS by 1 vector of partial autocorrelations
\end_layout

\begin_layout Plain Layout

 PACSTD     - A LAGS by 1 vector of standard deviations
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

COMMENTS:
\end_layout

\begin_layout Plain Layout

 Sample partial autocorrelations computed from autocorrelations that are
\end_layout

\begin_layout Plain Layout

 computed using the maximum number of observations for each lag.
  For
\end_layout

\begin_layout Plain Layout

 example, if DATA has 100 observations, the first autocorrelation is
\end_layout

\begin_layout Plain Layout

 computed using 99 data points, the second with 98 data points and so on.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Theoretical autocorrelation and partial autocorrelation
\end_layout

\begin_layout Subsection
ARMA Autocorrelations: 
\family typewriter
acf
\end_layout

\begin_layout Standard
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ARMA! @
\family typewriter
acf
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Autocorrelation!ARMA
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ARMA!Autocorrelation
\end_layout

\end_inset

 Computes the theoretical autocorrelations from an ARMA(P,Q) by solving
 the Yule-Walker equations.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
The two examples correspond to an AR(1) with 
\begin_inset Formula $\phi_{1}=.9$
\end_inset

 and an ARMA(1,1) with 
\begin_inset Formula $\phi_{1}=.9$
\end_inset

 and 
\begin_inset Formula $\theta_{1}=.9$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

ac = acf(.9,0,5)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

ac =
\end_layout

\begin_layout Plain Layout

    1.0000
\end_layout

\begin_layout Plain Layout

    0.9000
\end_layout

\begin_layout Plain Layout

    0.8100
\end_layout

\begin_layout Plain Layout

    0.7290
\end_layout

\begin_layout Plain Layout

    0.6561
\end_layout

\begin_layout Plain Layout

    0.5905
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

ac = acf(.9,.9,5)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

ac =
\end_layout

\begin_layout Plain Layout

    1.0000
\end_layout

\begin_layout Plain Layout

    0.9499
\end_layout

\begin_layout Plain Layout

    0.8549
\end_layout

\begin_layout Plain Layout

    0.7694
\end_layout

\begin_layout Plain Layout

    0.6924
\end_layout

\begin_layout Plain Layout

    0.6232
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Comments
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Computes the theoretical autocorrelations and long-run variance of
\end_layout

\begin_layout Plain Layout

an ARMA(p,q) process
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

USAGE:
\end_layout

\begin_layout Plain Layout

 [AUTOCORR, SIGMA2_T] = acf(PHI,THETA,N)
\end_layout

\begin_layout Plain Layout

 [AUTOCORR, SIGMA2_T] = acf(PHI,THETA,N,SIGMA2_E)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

INPUTS:
\end_layout

\begin_layout Plain Layout

 PHI         - Autoregressive parameters, in the order t-1,t-2,...
\end_layout

\begin_layout Plain Layout

 THETA       - Moving average parameters, in the order t-1,t-2,...
\end_layout

\begin_layout Plain Layout

 N           - Number of autocorrelations to be computed
\end_layout

\begin_layout Plain Layout

 SIGMA2_E    - [OPTIONAL] Variance of errors.
  If omitted, sigma2_e=1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

OUTPUTS:
\end_layout

\begin_layout Plain Layout

 AUTOCORR    - N+1 by 1 vector of autocorrelation.
 To recover the
\end_layout

\begin_layout Plain Layout

               autocovariance of an ARMA(P,Q), use AUTOCOV = AUTOCORR *
 SIGMA2_Y
\end_layout

\begin_layout Plain Layout

 SIGMA2_Y    - Long-run variance, denoted gamma0 of ARMA process with
\end_layout

\begin_layout Plain Layout

               innovation variance SIGMS2_E
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

COMMENTS:
\end_layout

\begin_layout Plain Layout

 Note: The ARMA model is parameterized as follows:
\end_layout

\begin_layout Plain Layout

       y(t)=phi(1)y(t-1)+phi(2)y(t-2)+...+phi(p)y(t-p)+e(t)+theta(1)e(t-1)
\end_layout

\begin_layout Plain Layout

       +theta(2)e(t-2)+...+theta(q)e(t-q)
\end_layout

\begin_layout Plain Layout

 To compute the autocorrelations for an ARMA that does not include all
\end_layout

\begin_layout Plain Layout

 lags 1 to P, insert 0 for any excluded lag.
  For example, if the model
\end_layout

\begin_layout Plain Layout

 was y(t) = phi(2)y(t-1), THETA = [0 phi(2)]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
ARMA Partial Autocorrelations: 
\family typewriter
pacf
\end_layout

\begin_layout Standard
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ARMA! @
\family typewriter
pacf
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ARMA!Partial Autocorrelation
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Partial Autocorrelation!ARMA
\end_layout

\end_inset

 Computes the theoretical partial autocorrelations from an ARMA(P,Q).
 The function uses 
\family typewriter
acf
\family default
 to produce the theoretical autocorrelations and then transforms them to
 partial autocorrelations by noting that the 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
sth
\end_layout

\end_inset

 partial autocorrelation is given by 
\begin_inset Formula $\phi_{s}$
\end_inset

 in the regression 
\begin_inset Formula 
\[
y_{t}=\phi_{1}y_{t-1}+\phi_{2}y_{t-2}+\ldots+\phi_{s}y_{t-s}+\epsilon_{t}
\]

\end_inset

and is computed using the first 
\begin_inset Formula $s+1$
\end_inset

 autocorrelations and the population regression coefficients.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
The two examples correspond to an AR(1) with 
\begin_inset Formula $\phi_{1}=.9$
\end_inset

 and an ARMA(1,1) with 
\begin_inset Formula $\phi_{1}=.9$
\end_inset

 and 
\begin_inset Formula $\theta_{1}=.9$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

pac = pacf(.9,0,5)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

pac =
\end_layout

\begin_layout Plain Layout

    1.0000
\end_layout

\begin_layout Plain Layout

    0.9000
\end_layout

\begin_layout Plain Layout

         0
\end_layout

\begin_layout Plain Layout

         0
\end_layout

\begin_layout Plain Layout

         0
\end_layout

\begin_layout Plain Layout

         0
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

pac = pacf(.9,.9,5)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

pac =
\end_layout

\begin_layout Plain Layout

    1.0000
\end_layout

\begin_layout Plain Layout

    0.9499
\end_layout

\begin_layout Plain Layout

   -0.4843
\end_layout

\begin_layout Plain Layout

    0.3226
\end_layout

\begin_layout Plain Layout

   -0.2399
\end_layout

\begin_layout Plain Layout

    0.1892
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Comments
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Computes the theoretical partial autocorrelations an ARMA(p,q) process
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

USAGE:
\end_layout

\begin_layout Plain Layout

 [PAUTOCORR] = pacf(PHI,THETA,N)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

INPUTS:
\end_layout

\begin_layout Plain Layout

 PHI         - Autoregressive parameters, in the order t-1,t-2,...
\end_layout

\begin_layout Plain Layout

 THETA       - Moving average parameters, in the order t-1,t-2,...
\end_layout

\begin_layout Plain Layout

 N           - Number of autocorrelations to be computed
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

OUTPUTS:
\end_layout

\begin_layout Plain Layout

 PAUTOCORR   - N+1 by 1 vector of partial autocorrelations.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

COMMENTS:
\end_layout

\begin_layout Plain Layout

 Note: The ARMA model is parameterized as follows:
\end_layout

\begin_layout Plain Layout

       y(t)=phi(1)y(t-1)+phi(2)y(t-2)+...+phi(p)y(t-p)+e(t)+theta(1)e(t-1)
\end_layout

\begin_layout Plain Layout

       +theta(2)e(t-2)+...+theta(q)e(t-q)
\end_layout

\begin_layout Plain Layout

 To compute the autocorrelations for an ARMA that does not include all
\end_layout

\begin_layout Plain Layout

 lags 1 to P, insert 0 for any excluded lag.
  For example, if the model
\end_layout

\begin_layout Plain Layout

 was y(t) = phi(2)y(t-1), THETA = [0 phi(2)]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Testing for serial correlation
\end_layout

\begin_layout Subsection
Ljung-Box 
\begin_inset Formula $Q$
\end_inset

 Statistic: 
\family typewriter
ljungbox
\end_layout

\begin_layout Standard
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ARMA! @
\family typewriter
ljungbox
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ARMA!Ljung-Box Q statistic
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
Ljung-Box Q statistic
\end_layout

\end_inset

 The Ljung-Box statistic tests whether the first 
\begin_inset Formula $k$
\end_inset

 autocorrelations are zero against an alternative that at least one is non-zero.
 The Ljung-Box 
\begin_inset Formula $Q$
\end_inset

 is computed 
\begin_inset Formula 
\[
Q=T(T+2)\sum_{i=1}^{k}\frac{\hat{\rho}_{i}}{T-K}
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
where 
\begin_inset Formula $\hat{\rho}_{i}$
\end_inset

 is the kþsample autocorrelation.
 This test statistic has an asymptotic 
\begin_inset Formula $\chi_{K}^{2}$
\end_inset

 distribution.
 
\series bold
Note
\series default
: The Ljung-Box statistic is not appropriate for heteroskedastic data.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

x = randn(1000,1);  % Define x to be a 1000 by 1 vector or random data
\end_layout

\begin_layout Plain Layout

[Q, pval] = ljungbox(x,5) % Results will vary based on the random numbers
 used
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Q =
\end_layout

\begin_layout Plain Layout

    0.2825
\end_layout

\begin_layout Plain Layout

    1.2403
\end_layout

\begin_layout Plain Layout

    2.0262
\end_layout

\begin_layout Plain Layout

    2.0316
\end_layout

\begin_layout Plain Layout

    3.8352
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

pval =
\end_layout

\begin_layout Plain Layout

    0.4049
\end_layout

\begin_layout Plain Layout

    0.4621
\end_layout

\begin_layout Plain Layout

    0.4330
\end_layout

\begin_layout Plain Layout

    0.2701
\end_layout

\begin_layout Plain Layout

    0.4266
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Comments
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Ljung-Box tests for the presence of serial correlation in up to q lags.
\end_layout

\begin_layout Plain Layout

Returns LAGS Ljung-Box statistics tests, one for tests for each lag between
 1
\end_layout

\begin_layout Plain Layout

and LAGS.
 Under the null of no serial correlation and assuming homoskedasticity,
\end_layout

\begin_layout Plain Layout

the Ljung-Box test statistic is asymptotically distributed X2(q)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

USAGE:
\end_layout

\begin_layout Plain Layout

 [Q,PVAL] = ljungbox(DATA,LAGS)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

INPUTS:
\end_layout

\begin_layout Plain Layout

 DATA      - A T by 1 vector of data
\end_layout

\begin_layout Plain Layout

 LAGS      - The maximum number of lags to compute the LB.
  The statistic and
\end_layout

\begin_layout Plain Layout

             pval will be returned for all sets of lags up to and
\end_layout

\begin_layout Plain Layout

             including LAGS
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

OUTPUTS:
\end_layout

\begin_layout Plain Layout

 Q         - A LAGS by 1 vector of Q statistics
\end_layout

\begin_layout Plain Layout

 PVAL      - A LAGS by 1 set of appropriate pvals
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

COMMENTS:
\end_layout

\begin_layout Plain Layout

 This test statistic is common but often inappropriate since it assumes
\end_layout

\begin_layout Plain Layout

 homoskedasticity.
  For a heteroskedasticity consistent serial
\end_layout

\begin_layout Plain Layout

 correlation test, see lmtest1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

SEE ALSO:
\end_layout

\begin_layout Plain Layout

 lmtest1, lmtest2
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
LM Serial Correlation Test: 
\family typewriter
lmtest1
\end_layout

\begin_layout Standard
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ARMA! @
\family typewriter
lmtest1
\end_layout

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ARMA! LM test for serial correlation
\end_layout

\end_inset

 Conducts an LM test that there is no evidence of serial correlation up
 to an including 
\begin_inset Formula $Q$
\end_inset

 lags of the dependant variable.
 The test is an LM-test for testing the null that all of the regression
 coefficients are zero in 
\begin_inset Formula 
\[
y_{t}=\phi_{0}+\phi_{1}y_{t-1}+\phi_{2}y_{t-2}+\ldots+\phi_{Q}y_{t-Q}+\epsilon_{t}.
\]

\end_inset

The null tested is 
\begin_inset Formula $H_{0}:\phi_{1}=\phi_{2}=\ldots=\phi_{Q}=0$
\end_inset

 and the test is computed as an LM test of the form 
\begin_inset Formula 
\[
LM=T\hat{\mathbf{s}}\hat{\mathbf{S}}^{-1}\hat{\mathbf{s}}
\]

\end_inset

where 
\begin_inset Formula $\mathbf{s}=T^{-1}\mathbf{X}'\tilde{\mathbf{\epsilon}}$
\end_inset

 and 
\begin_inset Formula $\mathbf{S}=T^{-1}\sum_{t=1}^{T}\tilde{\epsilon}_{t}\mathbf{x}_{t}\mathbf{x}_{t}'$
\end_inset

 where 
\begin_inset Formula $\mathbf{x}_{t}=[y_{t-1}y_{t-2}\ldots y_{t-Q}]$
\end_inset

 and 
\begin_inset Formula $\tilde{\epsilon}_{t}=y_{t}-\bar{y}$
\end_inset

.
 The function is called by passing the data and the number of lags to test
 into the function
\end_layout

\begin_layout Standard
\noindent

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

LM = lmtest1(data, Q)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
and returns a 
\begin_inset Formula $Q$
\end_inset

 by 1 vector of LM tests where the first value tests 1 lag, the second value
 tests 2 lags, and so on up to the 
\begin_inset Formula $Q$
\end_inset

þwhich returns the 
\begin_inset Formula $Q$
\end_inset

-lag LM test for serial correlation.
 
\family typewriter
lmtest1
\family default
 can take an optional third argument which determines the covariance estimator
 (
\begin_inset Formula $\hat{\mathbf{S}}$
\end_inset

): 0 uses a non-heteroskedasticity robust estimator while 1 (default) uses
 a heteroskedasticity robust estimator.
 To use the alternative form, use the three parameter form
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

LM = lmtest1(data, Q, robust)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
where robust is either 0 or 1.
 
\family typewriter
lmtest1
\family default
 also returns an optional second output, the p-values of each test statistic
 computed using a 
\begin_inset Formula $\chi_{j}^{2}$
\end_inset

 where 
\begin_inset Formula $j$
\end_inset

 is the number of lags used in that test, so 1 for the first value of 
\family typewriter
LM
\family default
, 2 for the second and so on up to a 
\begin_inset Formula $\chi_{Q}^{2}$
\end_inset

 for the final value.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[LM, pval] = lmtest1(data, Q, robust)
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

x = randn(1000,1);  % Define x to be a 1000 by 1 vector or random data
\end_layout

\begin_layout Plain Layout

[LM, pval] = lmtest1(x,5) % Results will vary based on the random numbers
 used
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

LM =
\end_layout

\begin_layout Plain Layout

    0.0223
\end_layout

\begin_layout Plain Layout

    0.1279
\end_layout

\begin_layout Plain Layout

    0.5606
\end_layout

\begin_layout Plain Layout

    0.7200
\end_layout

\begin_layout Plain Layout

    0.5851
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

pval =
\end_layout

\begin_layout Plain Layout

    0.8813
\end_layout

\begin_layout Plain Layout

    0.9381
\end_layout

\begin_layout Plain Layout

    0.9054
\end_layout

\begin_layout Plain Layout

    0.9488
\end_layout

\begin_layout Plain Layout

    0.9887
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

[LM, pval] = lmtest1(x,5,0) % Non-robust standard errors
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

LM =
\end_layout

\begin_layout Plain Layout

    0.0229
\end_layout

\begin_layout Plain Layout

    0.1256
\end_layout

\begin_layout Plain Layout

    0.5827
\end_layout

\begin_layout Plain Layout

    0.7308
\end_layout

\begin_layout Plain Layout

    0.5879
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

pval =
\end_layout

\begin_layout Plain Layout

    0.8798
\end_layout

\begin_layout Plain Layout

    0.9391
\end_layout

\begin_layout Plain Layout

    0.9004
\end_layout

\begin_layout Plain Layout

    0.9475
\end_layout

\begin_layout Plain Layout

    0.9886
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Comments
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

LM tests for the presence of serial correlation in q lags, with or without
\end_layout

\begin_layout Plain Layout

heteroskedasticity.
 Returns Q LM tests, one for tests for each lag between 1
\end_layout

\begin_layout Plain Layout

and Q.
 Under the null of no serial correlation, the LM-test is asymptotically
\end_layout

\begin_layout Plain Layout

distributed X2(q)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

USAGE:
\end_layout

\begin_layout Plain Layout

 [LM,PVAL] = lmtest1(DATA,Q)
\end_layout

\begin_layout Plain Layout

 [LM,PVAL] = lmtest1(DATA,Q,ROBUST)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

INPUTS:
\end_layout

\begin_layout Plain Layout

 DATA      - A set of deviates from a process with or without mean
\end_layout

\begin_layout Plain Layout

 Q         - The maximum number of lags to regress on.
  The statistic and
\end_layout

\begin_layout Plain Layout

             pval will be returned for all sets of lags up to and including
 q
\end_layout

\begin_layout Plain Layout

 ROBUST    - [OPTIONAL] Logical variable (0 (non-robust) or 1 (robust))
 to
\end_layout

\begin_layout Plain Layout

             indicate whether heteroskedasticity robust standard errors
\end_layout

\begin_layout Plain Layout

             should be used.
 Default is to use robust standard errors
\end_layout

\begin_layout Plain Layout

             (ROBUST=1).
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

OUTPUTS:
\end_layout

\begin_layout Plain Layout

 LM        - A Qx1 vector of statistics
\end_layout

\begin_layout Plain Layout

 PVAL      - A Qx1 set of appropriate pvals
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

COMMENTS:
\end_layout

\begin_layout Plain Layout

 To increase power of this test, the variance estimator is computed under
\end_layout

\begin_layout Plain Layout

 the alternative.
  As a result, this test is an LR-class test but, aside
\end_layout

\begin_layout Plain Layout

 from the variance estimator, is identical to the usual LM test for serial
\end_layout

\begin_layout Plain Layout

 correlation
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Filtering
\end_layout

\begin_layout Subsection
Baxter-King Filtering: 
\family typewriter
bkfilter
\end_layout

\begin_layout Standard
The Baxter-King filter for extracting the trend and cyclic component from
 macroeconomic time series 
\begin_inset CommandInset citation
LatexCommand citep
key "BaxterKing::1999"
literal "true"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

% Load US GDP data
\end_layout

\begin_layout Plain Layout

load GDP
\end_layout

\begin_layout Plain Layout

% Standard BK Filter with periods of 6 and 32
\end_layout

\begin_layout Plain Layout

[trend, cyclic] = bkfilter(log(GDP),6,32)
\end_layout

\begin_layout Plain Layout

% BK Filter for low pass filtering only at 40 period, CYCLIC will be 0
\end_layout

\begin_layout Plain Layout

[trend, cyclic] = bkfilter(log(GDP),40,40)
\end_layout

\begin_layout Plain Layout

% BK Filter using a 2-sided 20 point approximation
\end_layout

\begin_layout Plain Layout

trend = bkfilter(log(GDP),6,32,20)
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Required Inputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[outputs] = bkfilter(Y,P,Q)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The required inputs are: 
\end_layout

\begin_layout Itemize

\family typewriter
Y
\family default
: 
\begin_inset Formula $T$
\end_inset

 by 
\begin_inset Formula $k$
\end_inset

 matrix of data to be filtered 
\end_layout

\begin_layout Itemize

\family typewriter
P
\family default
: Number of periods for the high pass filter 
\end_layout

\begin_layout Itemize

\family typewriter
Q
\family default
: Number of periods for the low pass filter 
\end_layout

\begin_layout Subsubsection
Optional Inputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[outputs] = bkfilter(Y,P,Q,K)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The required inputs are: 
\end_layout

\begin_layout Itemize

\family typewriter
K
\family default
: Number of points to use in the approximate optimal filter.
 Larger number of points provide more accurate approximations, although
 the first and last 
\family typewriter
K
\family default
 data points will not be filtered.
 The default is 12.
 
\end_layout

\begin_layout Subsubsection
Outputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[TREND,CYCLIC,NOISE] = bkfilter(Y,P,Q,K)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
TREND
\family default
: The filtered trend, which is the signal with a period larger than 
\family typewriter
Q
\family default
.
 The first and last 
\family typewriter
K
\family default
 points of 
\family typewriter
TREND
\family default
 will be equal to 
\family typewriter
Y
\family default
.
 
\end_layout

\begin_layout Itemize

\family typewriter
CYCLIC
\family default
: The cyclic component, which is the signal with a period between 
\family typewriter
P
\family default
 and 
\family typewriter
Q
\family default
.
 The first and last 
\family typewriter
K
\family default
 points of 
\family typewriter
CYCLIC
\family default
 will be 0.
 
\end_layout

\begin_layout Itemize

\family typewriter
NOISE
\family default
: The high frequency noise component, which is the signal with a period
 shorter than 
\family typewriter
P
\family default
.
 The first and last 
\family typewriter
K
\family default
 points of 
\family typewriter
NOISE
\family default
 will be 0.
 
\end_layout

\begin_layout Subsubsection
Comments
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Baxter-King filtering of multiple time series
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

USAGE:
\end_layout

\begin_layout Plain Layout

  [TREND,CYCLIC,NOISE] = bkfilter(Y,P,Q,K)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

INPUTS:
\end_layout

\begin_layout Plain Layout

  Y      - A T by K matrix of data to be filtered.
\end_layout

\begin_layout Plain Layout

  P      - Number of periods to use in the higher frequency filter (e.g.
 6 for quarterly data).
\end_layout

\begin_layout Plain Layout

             Must be at least 2.
\end_layout

\begin_layout Plain Layout

  Q      - Number of periods to use in the lower frequency filter (e.g.
 32 for quarterly data).
 Q
\end_layout

\begin_layout Plain Layout

             can be inf, in which case the low pass filter is a 2K+1 moving
 average.
\end_layout

\begin_layout Plain Layout

  K      - [OPTIONAL] Number of points to use in the finite approximation
 bandpass filter.
  The
\end_layout

\begin_layout Plain Layout

             default value is 12.
  The filter throws away the first  and last K points.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

OUTPUTS:
\end_layout

\begin_layout Plain Layout

  TREND  - A T by K matrix containing the filtered trend.
  The first and last K points equal Y.
\end_layout

\begin_layout Plain Layout

  CYCLIC - A T by K matrix containing the filtered cyclic component.
 The first and last K points are 0.
\end_layout

\begin_layout Plain Layout

  NOISE  - A T by K matrix containing the filtered noise component.
  The first and last K points are 0.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

COMMENTS:
\end_layout

\begin_layout Plain Layout

The noise component is simply the original data minus the trend and cyclic
 component, NOISE = Y -
\end_layout

\begin_layout Plain Layout

TREND - CYCLIC where the trend is produces by the low pass filter and the
 cyclic component is
\end_layout

\begin_layout Plain Layout

produced by the difference of the high pass filter and the low pass filter.
  The recommended
\end_layout

\begin_layout Plain Layout

values of P and Q are 6 and 32 or 40 for quarterly data, or 18 and 96 or
 120 for monthly data.
\end_layout

\begin_layout Plain Layout

Setting Q=P produces a single bandpass filer and the cyclic component will
 be 0.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

EXAMPLES:
\end_layout

\begin_layout Plain Layout

  Load US GDP data
\end_layout

\begin_layout Plain Layout

      load GDP
\end_layout

\begin_layout Plain Layout

  Standard BK Filter with periods of 6 and 32
\end_layout

\begin_layout Plain Layout

      [trend, cyclic] = bkfilter(log(GDP),6,32)
\end_layout

\begin_layout Plain Layout

  BK Filter for low pass filtering only at 40 period, CYCLIC will be 0
\end_layout

\begin_layout Plain Layout

      [trend, cyclic] = bkfilter(log(GDP),40,40)
\end_layout

\begin_layout Plain Layout

  BK Filter using a 2-sided 20 point approximation
\end_layout

\begin_layout Plain Layout

      trend = bkfilter(log(GDP),6,32,20)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

 See also HP_FILTER, BEVERIDGENELSON
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%
\backslash
subsection{Beveridge-Nelson Decomposition 
\backslash
texttt{beveridgenelson}}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%
\backslash
newpage
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Hodrick-Prescott Filtering: 
\family typewriter
hp_filter
\end_layout

\begin_layout Standard
The Hodrick-Prescott filter for extracting the trend and cyclic component
 from macroeconomic time series 
\begin_inset CommandInset citation
LatexCommand citep
key "HodrickPrescott::1997"
literal "true"

\end_inset

.
 The HP filter identifies the trend as the solution to 
\begin_inset Formula 
\[
\min_{\{\mu_{t}\}}\sum_{t=1}^{T}\left(y_{t}-\mu_{t}\right)^{2}+\lambda\left(\mu_{t-1}-\mu_{t}-\mu_{t}+\mu_{t+1}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
where 
\begin_inset Formula $\lambda$
\end_inset

 is a parameter which determines the cutoff frequency of the filter and
 any trend points outside of 
\begin_inset Formula $1,\ldots,T$
\end_inset

 are dropped.
 If 
\begin_inset Formula $\lambda=0$
\end_inset

 then 
\begin_inset Formula $\mu_{t}=y_{t}$
\end_inset

 and as 
\begin_inset Formula $\lambda\rightarrow\infty$
\end_inset

 
\begin_inset Formula $\mu_{t}$
\end_inset

 limits to a least squares linear trend fit.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

% Load US GDP data
\end_layout

\begin_layout Plain Layout

load GDP
\end_layout

\begin_layout Plain Layout

% Standard HP Filter with lambda = 1600
\end_layout

\begin_layout Plain Layout

[trend, cyclic] = hp_filter(log(GDP),1600)
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Required Inputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[outputs] = hp_filter(Y,LAMBDA)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The required inputs are: 
\end_layout

\begin_layout Itemize

\family typewriter
Y
\family default
: 
\begin_inset Formula $T$
\end_inset

 by 
\begin_inset Formula $k$
\end_inset

 matrix of data to be filtered 
\end_layout

\begin_layout Itemize

\family typewriter
LAMBDA
\family default
: Smoothing parameter for HP filter.
 Values above 
\begin_inset Formula $10^{1}0$
\end_inset

 produce unstable matrix inverses and so a linear trend is forced at this
 point.
 
\end_layout

\begin_layout Subsubsection
Outputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[TREND,CYCLIC] = hp_filter(inputs)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
TREND
\family default
: The filtered trend.
 
\end_layout

\begin_layout Itemize

\family typewriter
CYCLIC
\family default
: The cyclic component.
 
\end_layout

\begin_layout Subsubsection
Comments
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Hodrick-Prescott filtering of multiple time series
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

USAGE:
\end_layout

\begin_layout Plain Layout

  [TREND,CYCLIC] = hp_filter(Y,LAMBDA)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

INPUTS:
\end_layout

\begin_layout Plain Layout

  Y      - A T by K matrix of data to be filtered.
\end_layout

\begin_layout Plain Layout

  LAMBDA - Positive, scalar integer containing the smoothing parameter of
 the HP filter.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

OUTPUTS:
\end_layout

\begin_layout Plain Layout

  TREND  - A T by K matrix containing the filtered trend
\end_layout

\begin_layout Plain Layout

  CYCLIC - A T by K matrix containing the filtered cyclic component
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

COMMENTS:
\end_layout

\begin_layout Plain Layout

  The cyclic component is simply the original data minus the trend, CYCLIC
 = Y - TREND.
  1600 is
\end_layout

\begin_layout Plain Layout

  the recommended value of LAMBDA for Quarterly Data while 14400 is the
 recommended value of LAMBDA
\end_layout

\begin_layout Plain Layout

  for monthly data.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

EXAMPLES:
\end_layout

\begin_layout Plain Layout

  Load US GDP data
\end_layout

\begin_layout Plain Layout

      load GDP
\end_layout

\begin_layout Plain Layout

  Standard HP Filter with lambda = 1600
\end_layout

\begin_layout Plain Layout

      [trend, cyclic] = hp_filter(log(GDP),1600)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

See also BKFILTER, BEVERIDGENELSON
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Regression with Time Series Data
\end_layout

\begin_layout Subsection
Regression with time-series data: 
\family typewriter
olsnw
\end_layout

\begin_layout Standard
Regression with Newey-West variance-covariance estimation.
 Aside from the difference variance-covariance estimator, is virtually identical
 to 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

ols
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

% Set up some experimental data
\end_layout

\begin_layout Plain Layout

T = 500;
\end_layout

\begin_layout Plain Layout

e = armaxfilter_simulate(T,0,1,.8);
\end_layout

\begin_layout Plain Layout

x = armaxfilter_simulate(T,0,1,.8);
\end_layout

\begin_layout Plain Layout

y = x + e;
\end_layout

\begin_layout Plain Layout

% Regression with a constant
\end_layout

\begin_layout Plain Layout

b = olsnw(y,x)
\end_layout

\begin_layout Plain Layout

% Regression through the origin (uncentered)
\end_layout

\begin_layout Plain Layout

b = olsnw(y,x,0)
\end_layout

\begin_layout Plain Layout

% Regression using 10 lags in the NW covariance estimator
\end_layout

\begin_layout Plain Layout

b = olsnw(y,x,1,10)
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Required Inputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[outputs] = ols(Y,X)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The required inputs are: 
\end_layout

\begin_layout Itemize

\family typewriter
Y
\family default
: A 
\begin_inset Formula $T$
\end_inset

 by 1 vector containing the regressand.
 
\end_layout

\begin_layout Itemize

\family typewriter
X
\family default
: A 
\begin_inset Formula $T$
\end_inset

 by 
\begin_inset Formula $k$
\end_inset

 vector containing the regressors.
 
\family typewriter
X
\family default
 should be full rank and 
\shape italic
should not
\shape default
 contain a constant column.
 
\end_layout

\begin_layout Subsubsection
Optional Inputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[outputs] = olsnw(Y,X,C,NWLAGS)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The optional inputs are: 
\end_layout

\begin_layout Itemize

\family typewriter
C
\family default
: A scalar (0 or 1) indicating whether the regression should include a constant.
 If 1 the 
\begin_inset Formula $\bX$
\end_inset

 data are augmented by a columns of 1s before the regression coefficients
 are estimated.
 If omitted or empty, the default value is 1.
 
\family typewriter
C
\family default
 determines whether centered or uncentered estimators of 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
RR
\end_layout

\end_inset

 and 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
RRbar
\end_layout

\end_inset

 are computed.
 
\end_layout

\begin_layout Itemize

\family typewriter
NWLAGS
\family default
: Number of lags to use when computing the variance-covariance matrix of
 the estimated parameters.
 The default value is 
\begin_inset Formula $\lfloor T^{\frac{1}{3}}\rfloor$
\end_inset

.
 
\end_layout

\begin_layout Subsubsection
Outputs
\end_layout

\begin_layout Standard

\family typewriter
olsnw
\family default
 provides many other outputs than the estimated parameters.
 The full 
\family typewriter
olsnw
\family default
 command can return
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[B,TSTAT,S2,VCVNW,R2,RBAR,YHAT] = olsnw(inputs)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The outputs are: 
\end_layout

\begin_layout Itemize

\family typewriter
B
\family default
: 
\begin_inset Formula $k$
\end_inset

 by 1 vector of estimated parameters.
 
\end_layout

\begin_layout Itemize

\family typewriter
TSTAT
\family default
: 
\begin_inset Formula $k$
\end_inset

 by 1 vector of t-stats computed using heteroskedasticity robust inference.
 
\end_layout

\begin_layout Itemize

\family typewriter
S2
\family default
: Estimated variance of the regression error.
 Computed using a degree of freedom adjustment (
\begin_inset Formula $n-k$
\end_inset

).
 
\end_layout

\begin_layout Itemize

\family typewriter
VCVNW
\family default
: Newey-West variance-covariance matrix 
\end_layout

\begin_layout Itemize

\family typewriter
R2
\family default
: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
RR
\end_layout

\end_inset

.
 Centered if 
\family typewriter
C
\family default
 is 1 or omitted.
 
\end_layout

\begin_layout Itemize

\family typewriter
RBAR
\family default
: 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
RRbar
\end_layout

\end_inset

.
 Centered if 
\family typewriter
C
\family default
 is 1 or omitted.
 
\end_layout

\begin_layout Itemize

\family typewriter
YHAT
\family default
: Fit values of 
\family typewriter
Y
\family default
 
\end_layout

\begin_layout Subsubsection
Comments
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Linear regression estimation with Newey-West HAC standard errors.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

USAGE:
\end_layout

\begin_layout Plain Layout

  [B,TSTAT,S2,VCVNW,R2,RBAR,YHAT] = olsnw(Y,X,C,NWLAGS)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

INPUTS:
\end_layout

\begin_layout Plain Layout

  Y       - T by 1 vector of dependent data
\end_layout

\begin_layout Plain Layout

  X       - T by K vector of independent data
\end_layout

\begin_layout Plain Layout

  C       - 1 or 0 to indicate whether a constant should be included (1:
 include constant)
\end_layout

\begin_layout Plain Layout

  NWLAGS  - Number of lags to included in the covariance matrix estimator.
 If omitted or empty,
\end_layout

\begin_layout Plain Layout

              NWLAGS = floor(T^(1/3)).
 If set to 0 estimates White's Heteroskedasticity Consistent
\end_layout

\begin_layout Plain Layout

              variance-covariance.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

OUTPUTS:
\end_layout

\begin_layout Plain Layout

  B       - A K(+1 is C=1) vector of parameters.
  If a constant is included, it is the first parameter
\end_layout

\begin_layout Plain Layout

  TSTAT   - A K(+1) vector of t-statistics computed using Newey-West HAC
 standard errors
\end_layout

\begin_layout Plain Layout

  S2      - Estimated error variance of the regression, estimated using
 Newey-West with NWLAGS
\end_layout

\begin_layout Plain Layout

  VCVNW   - Variance-covariance matrix of the estimated parameters computed
 using Newey-West
\end_layout

\begin_layout Plain Layout

  R2      - R-squared of the regression.
  Centered if C=1
\end_layout

\begin_layout Plain Layout

  RBAR    - Adjusted R-squared.
 Centered if C=1
\end_layout

\begin_layout Plain Layout

  YHAT    - Fit values of the dependent variable
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

COMMENTS:
\end_layout

\begin_layout Plain Layout

  The model estimated is Y = X*B + epsilon where Var(epsilon)=S2.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

EXAMPLES:
\end_layout

\begin_layout Plain Layout

  Regression with automatic BW selection
\end_layout

\begin_layout Plain Layout

      b = olsnw(y,x)
\end_layout

\begin_layout Plain Layout

  Regression without a constant
\end_layout

\begin_layout Plain Layout

      b = olsnw(y,x,0)
\end_layout

\begin_layout Plain Layout

  Regression with a pre-specified lag-length of 10
\end_layout

\begin_layout Plain Layout

      b = olsnw(y,x,1,10)
\end_layout

\begin_layout Plain Layout

  Regression with White standard errors
\end_layout

\begin_layout Plain Layout

      b = olsnw(y,x,1,0)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

See also OLS
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Long-run Covariance Estimation
\end_layout

\begin_layout Subsection
Newey-West covariance estimation 
\family typewriter
covnw
\end_layout

\begin_layout Standard
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

covnw
\end_layout

\end_inset

 computes the Newey-West covariance estimator defined 
\begin_inset Formula 
\[
\hat{\sigma}_{NW}^{2}=\hat{\GammaB}_{0}+\sum_{i=1}^{L}w_{i}(\hat{\GammaB}_{i}+\hat{\GammaB}_{i}')
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
where 
\begin_inset Formula $w_{i}=(L-i+1)/(L+1)$
\end_inset

 for 
\begin_inset Formula $i=1,2,\ldots,L$
\end_inset

 and 
\begin_inset Formula $\hat{\GammaB}_{i}=\sum_{t=i+1}^{T}\tilde{\bx}_{t}\tilde{\bx}_{t-i}$
\end_inset

 where 
\begin_inset Formula $\tilde{\bx}_{t}=\bx_{t}-\bar{\bx}$
\end_inset

 are the (optionally) demeaned data.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

y = armaxfilter_simulate(1000,0,1,.9);
\end_layout

\begin_layout Plain Layout

% Newey-West covariance with automatic BW selection
\end_layout

\begin_layout Plain Layout

lrcov = covnw(y)
\end_layout

\begin_layout Plain Layout

% Newey-West covariance with 10 lags
\end_layout

\begin_layout Plain Layout

lrcov = covnw(y, 10)
\end_layout

\begin_layout Plain Layout

% Newey-West covariance with 10 lags and no demeaning
\end_layout

\begin_layout Plain Layout

lrcov = covnw(y, 10, 0)
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Required Inputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[outputs] = covnw(DATA)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The required inputs are: 
\end_layout

\begin_layout Itemize

\family typewriter
DATA
\family default
: 
\begin_inset Formula $T$
\end_inset

 by 
\begin_inset Formula $k$
\end_inset

 matrix of time-series data.
 
\end_layout

\begin_layout Subsubsection
Optional Inputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[outputs] = covnw(DATA, NLAGS, DEMEAN)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The optional inputs are: 
\end_layout

\begin_layout Itemize

\family typewriter
NLAGS
\family default
: Number of lags to use in the Newey-West estimator.
 If omitted, NLAGS = 
\begin_inset Formula $\lfloor T^{\frac{1}{3}}\rfloor$
\end_inset

.
 
\end_layout

\begin_layout Itemize

\family typewriter
DEMEAN
\family default
: Logical value indicating whether the demean the data (1) or to compute
 the long-run covariance of the data directly.
 Default is to demean.
 
\end_layout

\begin_layout Subsubsection
Outputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[V] = covnw(inputs)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
V
\family default
: 
\begin_inset Formula $k$
\end_inset

 by 
\begin_inset Formula $k$
\end_inset

 covariance matrix.
 
\end_layout

\begin_layout Subsubsection
Comments
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Long-run covariance estimation using Newey-West (Bartlett) weights
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

USAGE:
\end_layout

\begin_layout Plain Layout

  V = covnw(DATA)
\end_layout

\begin_layout Plain Layout

  V = covnw(DATA,NLAG,DEMEAN)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

INPUTS:
\end_layout

\begin_layout Plain Layout

  DATA   - T by K vector of dependent data
\end_layout

\begin_layout Plain Layout

  NLAG   - Non-negative integer containing the lag length to use.
  If empty or not included,
\end_layout

\begin_layout Plain Layout

             NLAG=min(floor(1.2*T^(1/3)),T) is used
\end_layout

\begin_layout Plain Layout

  DEMEAN - Logical true or false (0 or 1) indicating whether the mean should
 be subtracted when
\end_layout

\begin_layout Plain Layout

             computing the covariance
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

OUTPUTS:
\end_layout

\begin_layout Plain Layout

  V      - A K by K covariance matrix estimated using Newey-West (Bartlett)
 weights
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

COMMENTS:
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

EXAMPLES:
\end_layout

\begin_layout Plain Layout

  y = armaxfilter_simulate(1000,0,1,.9);
\end_layout

\begin_layout Plain Layout

  % Newey-West covariance with automatic BW selection
\end_layout

\begin_layout Plain Layout

  lrcov = covnw(y)
\end_layout

\begin_layout Plain Layout

  % Newey-West covariance with 10 lags
\end_layout

\begin_layout Plain Layout

  lrcov = covnw(y, 10)
\end_layout

\begin_layout Plain Layout

  % Newey-West covariance with 10 lags and no demeaning
\end_layout

\begin_layout Plain Layout

  lrcov = covnw(y, 10, 0)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

See also COVVAR
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Den Hann-Levin covariance estimation 
\family typewriter
covvar
\end_layout

\begin_layout Standard
Long-run covariance estimation using the VAR-based estimator of 
\begin_inset CommandInset citation
LatexCommand cite
key "HaanLevin::2000"
literal "true"

\end_inset

.
 The basic idea of their estimator is the compute the long-run variance
 of a process from a Vector Autoregression.
 Suppose a vector of data 
\begin_inset Formula $\by_{t}$
\end_inset

 follows a stationary VAR, 
\begin_inset Formula 
\[
\left(\by_{t}-\muB\right)=\Phi_{1}\left(\by_{t-1}-\muB\right)+\ldots+\Phi_{k}\left(\by_{t-k}-\muB\right)+\epsilonB_{t}
\]

\end_inset

where 
\begin_inset Formula $\muB=\E\left[\by_{t}\right]$
\end_inset

, then the variance of 
\begin_inset Formula $\by_{t}$
\end_inset

 can be computed 
\begin_inset Formula 
\[
\left(\by_{t}-\muB\right)-\Phi_{1}\left(\by_{t-1}-\muB\right)-\ldots-\Phi_{k}\left(\by_{t-k}-\muB\right)=\epsilonB_{t}
\]

\end_inset

from the VAR as 
\begin_inset Formula 
\[
\V\left[\by_{t}\right]=\left[\bI-\Phi_{1}-\ldots-\Phi_{K}\right]^{-1}\SigmaB\left[\bI-\Phi_{1}'-\ldots-\Phi_{K}'\right]^{-1}
\]

\end_inset

where 
\begin_inset Formula $\SigmaB=\E\left[\epsilonB_{t}\epsilonB_{t}'\right]$
\end_inset

 is the unconditional covariance of the residuals (assumed to be a vector
 White Noise process).
\end_layout

\begin_layout Standard
\noindent

\emph on
Note
\emph default
: This function differs slightly from the procedure of Den Haan and Levin
 in that it only conduct a global lag length search, and so the resultant
 VAR will not have any zero elements.
 Den Haan and Levin recommend using a series-by-series search with the possibili
ty of having different lag lengths of own lags and other lags.
 Changing to their procedure is something that may happen in future releases.
 Despite this difference, the estimator in the code is still consistent
 as long as the maximum lag length
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

y = armaxfilter_simulate(1000,0,1,.9);
\end_layout

\begin_layout Plain Layout

% VAR HAC covariance with automatic BW selection
\end_layout

\begin_layout Plain Layout

lrcov = covvar(y)
\end_layout

\begin_layout Plain Layout

% VAR HAC with at most 10 lags
\end_layout

\begin_layout Plain Layout

lrcov = covvar(y, 10)
\end_layout

\begin_layout Plain Layout

% VAR HAC with at most 10 lags selected using AIC
\end_layout

\begin_layout Plain Layout

lrcov = covnw(y, 10, 3)
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Required Inputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[outputs] = covvar(DATA)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The required inputs are: 
\end_layout

\begin_layout Itemize

\family typewriter
DATA
\family default
: 
\begin_inset Formula $T$
\end_inset

 by 
\begin_inset Formula $k$
\end_inset

 matrix of time-series data.
 
\end_layout

\begin_layout Subsubsection
Optional Inputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[outputs] = covnw(DATA, MAXLAGS, METHOD)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The optional inputs are: 
\end_layout

\begin_layout Itemize

\family typewriter
MAXLAGS
\family default
: The maximum number of lags to consider when selecting the VAR lag length.
 If omitted is set to 
\begin_inset Formula $\lfloor1.2T^{\frac{1}{3}}\rfloor$
\end_inset

 or 
\begin_inset Formula $T/K$
\end_inset

, whichever is less.
 
\end_layout

\begin_layout Itemize

\family typewriter
METHOD
\family default
: A scalar numeric value indicating the method to use when searching: 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Use 
\family typewriter
MAXLAGS
\family default
 in the VAR and do not search 
\end_layout

\begin_layout Enumerate
Use up to 
\family typewriter
MAXLAG
\family default
 and select the VAR order using SIC.
 This is the default.
 
\end_layout

\begin_layout Enumerate
Use up to 
\family typewriter
MAXLAG
\family default
 and select the VAR order using AIC.
 
\end_layout

\begin_layout Enumerate
Use up to 
\family typewriter
MAXLAG
\family default
 and select the VAR order using SIC using a global search.
 This option differs from option 2 in that it can select an irregular VAR
 order (e.g.
 select lags 1 and 4 rather than 1, 2, 3 and 4.).
 
\end_layout

\begin_layout Enumerate
Use up to 
\family typewriter
MAXLAG
\family default
 and select the VAR order using AIC using a global search.
 
\end_layout

\end_deeper
\begin_layout Subsubsection
Outputs
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[V,LAGSUSED] = covvar(inputs)
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
V
\family default
: 
\begin_inset Formula $k$
\end_inset

 by 
\begin_inset Formula $k$
\end_inset

 covariance matrix.
 
\end_layout

\begin_layout Itemize

\family typewriter
LAGSUSED
\family default
: A vector indicating the lags used in estimating the covariance.
 
\end_layout

\begin_layout Subsubsection
Comments
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Long-run covariance estimation using Newey-West (Bartlett) weights
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

USAGE:
\end_layout

\begin_layout Plain Layout

  V = covnw(DATA)
\end_layout

\begin_layout Plain Layout

  V = covnw(DATA,NLAG,DEMEAN)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

INPUTS:
\end_layout

\begin_layout Plain Layout

  DATA   - T by K vector of dependent data
\end_layout

\begin_layout Plain Layout

  NLAG   - Non-negative integer containing the lag length to use.
  If empty or not included,
\end_layout

\begin_layout Plain Layout

             NLAG=min(floor(1.2*T^(1/3)),T) is used
\end_layout

\begin_layout Plain Layout

  DEMEAN - Logical true or false (0 or 1) indicating whether the mean should
 be subtracted when
\end_layout

\begin_layout Plain Layout

             computing the covariance
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

OUTPUTS:
\end_layout

\begin_layout Plain Layout

  V      - A K by K covariance matrix estimated using Newey-West (Bartlett)
 weights
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

COMMENTS:
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

EXAMPLES:
\end_layout

\begin_layout Plain Layout

  y = armaxfilter_simulate(1000,0,1,.9);
\end_layout

\begin_layout Plain Layout

  % Newey-West covariance with automatic BW selection
\end_layout

\begin_layout Plain Layout

  lrcov = covnw(y)
\end_layout

\begin_layout Plain Layout

  % Newey-West covariance with 10 lags
\end_layout

\begin_layout Plain Layout

  lrcov = covnw(y, 10)
\end_layout

\begin_layout Plain Layout

  % Newey-West covariance with 10 lags and no demeaning
\end_layout

\begin_layout Plain Layout

  lrcov = covnw(y, 10, 0)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

See also COVVAR
\end_layout

\end_inset


\end_layout

\end_body
\end_document
